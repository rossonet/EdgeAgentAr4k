// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ar4k_beacon.proto

package org.ar4k.agent.tunnels.http.grpc.beacon;

public interface TunnelOrBuilder extends
    // @@protoc_insertion_point(interface_extends:beacon.Tunnel)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string uniqueTunnelId = 1;</code>
   */
  java.lang.String getUniqueTunnelId();
  /**
   * <code>string uniqueTunnelId = 1;</code>
   */
  com.google.protobuf.ByteString
      getUniqueTunnelIdBytes();

  /**
   * <code>.beacon.Agent agentFrom = 2;</code>
   */
  boolean hasAgentFrom();
  /**
   * <code>.beacon.Agent agentFrom = 2;</code>
   */
  org.ar4k.agent.tunnels.http.grpc.beacon.Agent getAgentFrom();
  /**
   * <code>.beacon.Agent agentFrom = 2;</code>
   */
  org.ar4k.agent.tunnels.http.grpc.beacon.AgentOrBuilder getAgentFromOrBuilder();

  /**
   * <code>.beacon.Agent agentTo = 3;</code>
   */
  boolean hasAgentTo();
  /**
   * <code>.beacon.Agent agentTo = 3;</code>
   */
  org.ar4k.agent.tunnels.http.grpc.beacon.Agent getAgentTo();
  /**
   * <code>.beacon.Agent agentTo = 3;</code>
   */
  org.ar4k.agent.tunnels.http.grpc.beacon.AgentOrBuilder getAgentToOrBuilder();

  /**
   * <code>.beacon.TunnelType type = 4;</code>
   */
  int getTypeValue();
  /**
   * <code>.beacon.TunnelType type = 4;</code>
   */
  org.ar4k.agent.tunnels.http.grpc.beacon.TunnelType getType();

  /**
   * <code>map&lt;string, string&gt; parameters = 5;</code>
   */
  int getParametersCount();
  /**
   * <code>map&lt;string, string&gt; parameters = 5;</code>
   */
  boolean containsParameters(
      java.lang.String key);
  /**
   * Use {@link #getParametersMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getParameters();
  /**
   * <code>map&lt;string, string&gt; parameters = 5;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getParametersMap();
  /**
   * <code>map&lt;string, string&gt; parameters = 5;</code>
   */

  java.lang.String getParametersOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; parameters = 5;</code>
   */

  java.lang.String getParametersOrThrow(
      java.lang.String key);
}
