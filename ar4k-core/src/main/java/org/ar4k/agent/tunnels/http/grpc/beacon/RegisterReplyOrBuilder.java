// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ar4k_beacon.proto

package org.ar4k.agent.tunnels.http.grpc.beacon;

public interface RegisterReplyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:beacon.RegisterReply)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * unique code for the registration on the beacon server
   * </pre>
   *
   * <code>string registerCode = 1;</code>
   */
  java.lang.String getRegisterCode();
  /**
   * <pre>
   * unique code for the registration on the beacon server
   * </pre>
   *
   * <code>string registerCode = 1;</code>
   */
  com.google.protobuf.ByteString
      getRegisterCodeBytes();

  /**
   * <code>int32 monitoringFrequency = 2;</code>
   */
  int getMonitoringFrequency();

  /**
   * <pre>
   * da questo momento la connessione dovrebbe passare in ssl con controllo reciproco dei certificati
   * </pre>
   *
   * <code>string cert = 3;</code>
   */
  java.lang.String getCert();
  /**
   * <pre>
   * da questo momento la connessione dovrebbe passare in ssl con controllo reciproco dei certificati
   * </pre>
   *
   * <code>string cert = 3;</code>
   */
  com.google.protobuf.ByteString
      getCertBytes();

  /**
   * <code>bytes ca = 4;</code>
   */
  com.google.protobuf.ByteString getCa();

  /**
   * <code>.beacon.Status statusRegistration = 5;</code>
   */
  boolean hasStatusRegistration();
  /**
   * <code>.beacon.Status statusRegistration = 5;</code>
   */
  org.ar4k.agent.tunnels.http.grpc.beacon.Status getStatusRegistration();
  /**
   * <code>.beacon.Status statusRegistration = 5;</code>
   */
  org.ar4k.agent.tunnels.http.grpc.beacon.StatusOrBuilder getStatusRegistrationOrBuilder();

  /**
   * <code>int64 timestampRegistration = 6;</code>
   */
  long getTimestampRegistration();
}
