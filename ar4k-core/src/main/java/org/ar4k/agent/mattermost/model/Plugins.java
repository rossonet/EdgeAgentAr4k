// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2019 Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model;

public class Plugins {
	private PluginManifest[] active;
	private PluginManifest[] inactive;

	@java.lang.SuppressWarnings("all")
	public Plugins() {
	}

	@java.lang.SuppressWarnings("all")
	public PluginManifest[] getActive() {
		return this.active;
	}

	@java.lang.SuppressWarnings("all")
	public PluginManifest[] getInactive() {
		return this.inactive;
	}

	@java.lang.SuppressWarnings("all")
	public void setActive(final PluginManifest[] active) {
		this.active = active;
	}

	@java.lang.SuppressWarnings("all")
	public void setInactive(final PluginManifest[] inactive) {
		this.inactive = inactive;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this)
			return true;
		if (!(o instanceof Plugins))
			return false;
		final Plugins other = (Plugins) o;
		if (!other.canEqual((java.lang.Object) this))
			return false;
		if (!java.util.Arrays.deepEquals(this.getActive(), other.getActive()))
			return false;
		if (!java.util.Arrays.deepEquals(this.getInactive(), other.getInactive()))
			return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof Plugins;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + java.util.Arrays.deepHashCode(this.getActive());
		result = result * PRIME + java.util.Arrays.deepHashCode(this.getInactive());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "Plugins(active=" + java.util.Arrays.deepToString(this.getActive()) + ", inactive="
				+ java.util.Arrays.deepToString(this.getInactive()) + ")";
	}
}
