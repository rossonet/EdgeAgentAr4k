// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2020-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model.config;

public class ExperimentalAuditSettings {
	private boolean sysLogEnabled;
	private String sysLogIp = "localhost";
	private int sysLogPort = 6514;
	private String sysLogTag;
	private String sysLogCert;
	private boolean sysLogInsecure = false;
	private int sysLogMaxQueueSize = 1000;
	private boolean fileEnabled;
	private String fileName;
	private int fileMaxSizeMb = 100;
	private int fileMaxAgeDays;
	private int fileMaxBackups;
	private boolean fileCompress;
	private int fileMaxQueueSize = 1000;

	@java.lang.SuppressWarnings("all")
	public ExperimentalAuditSettings() {
	}

	@java.lang.SuppressWarnings("all")
	public boolean isSysLogEnabled() {
		return this.sysLogEnabled;
	}

	@java.lang.SuppressWarnings("all")
	public String getSysLogIp() {
		return this.sysLogIp;
	}

	@java.lang.SuppressWarnings("all")
	public int getSysLogPort() {
		return this.sysLogPort;
	}

	@java.lang.SuppressWarnings("all")
	public String getSysLogTag() {
		return this.sysLogTag;
	}

	@java.lang.SuppressWarnings("all")
	public String getSysLogCert() {
		return this.sysLogCert;
	}

	@java.lang.SuppressWarnings("all")
	public boolean isSysLogInsecure() {
		return this.sysLogInsecure;
	}

	@java.lang.SuppressWarnings("all")
	public int getSysLogMaxQueueSize() {
		return this.sysLogMaxQueueSize;
	}

	@java.lang.SuppressWarnings("all")
	public boolean isFileEnabled() {
		return this.fileEnabled;
	}

	@java.lang.SuppressWarnings("all")
	public String getFileName() {
		return this.fileName;
	}

	@java.lang.SuppressWarnings("all")
	public int getFileMaxSizeMb() {
		return this.fileMaxSizeMb;
	}

	@java.lang.SuppressWarnings("all")
	public int getFileMaxAgeDays() {
		return this.fileMaxAgeDays;
	}

	@java.lang.SuppressWarnings("all")
	public int getFileMaxBackups() {
		return this.fileMaxBackups;
	}

	@java.lang.SuppressWarnings("all")
	public boolean isFileCompress() {
		return this.fileCompress;
	}

	@java.lang.SuppressWarnings("all")
	public int getFileMaxQueueSize() {
		return this.fileMaxQueueSize;
	}

	@java.lang.SuppressWarnings("all")
	public void setSysLogEnabled(final boolean sysLogEnabled) {
		this.sysLogEnabled = sysLogEnabled;
	}

	@java.lang.SuppressWarnings("all")
	public void setSysLogIp(final String sysLogIp) {
		this.sysLogIp = sysLogIp;
	}

	@java.lang.SuppressWarnings("all")
	public void setSysLogPort(final int sysLogPort) {
		this.sysLogPort = sysLogPort;
	}

	@java.lang.SuppressWarnings("all")
	public void setSysLogTag(final String sysLogTag) {
		this.sysLogTag = sysLogTag;
	}

	@java.lang.SuppressWarnings("all")
	public void setSysLogCert(final String sysLogCert) {
		this.sysLogCert = sysLogCert;
	}

	@java.lang.SuppressWarnings("all")
	public void setSysLogInsecure(final boolean sysLogInsecure) {
		this.sysLogInsecure = sysLogInsecure;
	}

	@java.lang.SuppressWarnings("all")
	public void setSysLogMaxQueueSize(final int sysLogMaxQueueSize) {
		this.sysLogMaxQueueSize = sysLogMaxQueueSize;
	}

	@java.lang.SuppressWarnings("all")
	public void setFileEnabled(final boolean fileEnabled) {
		this.fileEnabled = fileEnabled;
	}

	@java.lang.SuppressWarnings("all")
	public void setFileName(final String fileName) {
		this.fileName = fileName;
	}

	@java.lang.SuppressWarnings("all")
	public void setFileMaxSizeMb(final int fileMaxSizeMb) {
		this.fileMaxSizeMb = fileMaxSizeMb;
	}

	@java.lang.SuppressWarnings("all")
	public void setFileMaxAgeDays(final int fileMaxAgeDays) {
		this.fileMaxAgeDays = fileMaxAgeDays;
	}

	@java.lang.SuppressWarnings("all")
	public void setFileMaxBackups(final int fileMaxBackups) {
		this.fileMaxBackups = fileMaxBackups;
	}

	@java.lang.SuppressWarnings("all")
	public void setFileCompress(final boolean fileCompress) {
		this.fileCompress = fileCompress;
	}

	@java.lang.SuppressWarnings("all")
	public void setFileMaxQueueSize(final int fileMaxQueueSize) {
		this.fileMaxQueueSize = fileMaxQueueSize;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this)
			return true;
		if (!(o instanceof ExperimentalAuditSettings))
			return false;
		final ExperimentalAuditSettings other = (ExperimentalAuditSettings) o;
		if (!other.canEqual((java.lang.Object) this))
			return false;
		if (this.isSysLogEnabled() != other.isSysLogEnabled())
			return false;
		if (this.getSysLogPort() != other.getSysLogPort())
			return false;
		if (this.isSysLogInsecure() != other.isSysLogInsecure())
			return false;
		if (this.getSysLogMaxQueueSize() != other.getSysLogMaxQueueSize())
			return false;
		if (this.isFileEnabled() != other.isFileEnabled())
			return false;
		if (this.getFileMaxSizeMb() != other.getFileMaxSizeMb())
			return false;
		if (this.getFileMaxAgeDays() != other.getFileMaxAgeDays())
			return false;
		if (this.getFileMaxBackups() != other.getFileMaxBackups())
			return false;
		if (this.isFileCompress() != other.isFileCompress())
			return false;
		if (this.getFileMaxQueueSize() != other.getFileMaxQueueSize())
			return false;
		final java.lang.Object this$sysLogIp = this.getSysLogIp();
		final java.lang.Object other$sysLogIp = other.getSysLogIp();
		if (this$sysLogIp == null ? other$sysLogIp != null : !this$sysLogIp.equals(other$sysLogIp))
			return false;
		final java.lang.Object this$sysLogTag = this.getSysLogTag();
		final java.lang.Object other$sysLogTag = other.getSysLogTag();
		if (this$sysLogTag == null ? other$sysLogTag != null : !this$sysLogTag.equals(other$sysLogTag))
			return false;
		final java.lang.Object this$sysLogCert = this.getSysLogCert();
		final java.lang.Object other$sysLogCert = other.getSysLogCert();
		if (this$sysLogCert == null ? other$sysLogCert != null : !this$sysLogCert.equals(other$sysLogCert))
			return false;
		final java.lang.Object this$fileName = this.getFileName();
		final java.lang.Object other$fileName = other.getFileName();
		if (this$fileName == null ? other$fileName != null : !this$fileName.equals(other$fileName))
			return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof ExperimentalAuditSettings;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + (this.isSysLogEnabled() ? 79 : 97);
		result = result * PRIME + this.getSysLogPort();
		result = result * PRIME + (this.isSysLogInsecure() ? 79 : 97);
		result = result * PRIME + this.getSysLogMaxQueueSize();
		result = result * PRIME + (this.isFileEnabled() ? 79 : 97);
		result = result * PRIME + this.getFileMaxSizeMb();
		result = result * PRIME + this.getFileMaxAgeDays();
		result = result * PRIME + this.getFileMaxBackups();
		result = result * PRIME + (this.isFileCompress() ? 79 : 97);
		result = result * PRIME + this.getFileMaxQueueSize();
		final java.lang.Object $sysLogIp = this.getSysLogIp();
		result = result * PRIME + ($sysLogIp == null ? 43 : $sysLogIp.hashCode());
		final java.lang.Object $sysLogTag = this.getSysLogTag();
		result = result * PRIME + ($sysLogTag == null ? 43 : $sysLogTag.hashCode());
		final java.lang.Object $sysLogCert = this.getSysLogCert();
		result = result * PRIME + ($sysLogCert == null ? 43 : $sysLogCert.hashCode());
		final java.lang.Object $fileName = this.getFileName();
		result = result * PRIME + ($fileName == null ? 43 : $fileName.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "ExperimentalAuditSettings(sysLogEnabled=" + this.isSysLogEnabled() + ", sysLogIp=" + this.getSysLogIp()
				+ ", sysLogPort=" + this.getSysLogPort() + ", sysLogTag=" + this.getSysLogTag() + ", sysLogCert="
				+ this.getSysLogCert() + ", sysLogInsecure=" + this.isSysLogInsecure() + ", sysLogMaxQueueSize="
				+ this.getSysLogMaxQueueSize() + ", fileEnabled=" + this.isFileEnabled() + ", fileName="
				+ this.getFileName() + ", fileMaxSizeMb=" + this.getFileMaxSizeMb() + ", fileMaxAgeDays="
				+ this.getFileMaxAgeDays() + ", fileMaxBackups=" + this.getFileMaxBackups() + ", fileCompress="
				+ this.isFileCompress() + ", fileMaxQueueSize=" + this.getFileMaxQueueSize() + ")";
	}
}
