// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2017-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Switch {@link AuthService} request payload.
 * 
 * @author Takayuki Maruyama
 */
public class SwitchRequest {
  @JsonProperty("current_service")
  private AuthService currentService;
  @JsonProperty("new_service")
  private AuthService newService;
  @JsonProperty("email")
  private String email;
  /* @deprecated Mattermost 4.0 or lator: use {@link #password} instead. */
  @JsonProperty("current_password")
  private String currentPassword;
  @JsonProperty("password")
  private String password;
  @JsonProperty("new_password")
  private String newPassword;
  @JsonProperty("mfa_code")
  private String mfaCode;
  @JsonProperty("ldap_id")
  private String ldapId;

  @java.lang.SuppressWarnings("all")
  public SwitchRequest() {
  }

  @java.lang.SuppressWarnings("all")
  public AuthService getCurrentService() {
    return this.currentService;
  }

  @java.lang.SuppressWarnings("all")
  public AuthService getNewService() {
    return this.newService;
  }

  @java.lang.SuppressWarnings("all")
  public String getEmail() {
    return this.email;
  }

  @java.lang.SuppressWarnings("all")
  public String getCurrentPassword() {
    return this.currentPassword;
  }

  @java.lang.SuppressWarnings("all")
  public String getPassword() {
    return this.password;
  }

  @java.lang.SuppressWarnings("all")
  public String getNewPassword() {
    return this.newPassword;
  }

  @java.lang.SuppressWarnings("all")
  public String getMfaCode() {
    return this.mfaCode;
  }

  @java.lang.SuppressWarnings("all")
  public String getLdapId() {
    return this.ldapId;
  }

  @JsonProperty("current_service")
  @java.lang.SuppressWarnings("all")
  public void setCurrentService(final AuthService currentService) {
    this.currentService = currentService;
  }

  @JsonProperty("new_service")
  @java.lang.SuppressWarnings("all")
  public void setNewService(final AuthService newService) {
    this.newService = newService;
  }

  @JsonProperty("email")
  @java.lang.SuppressWarnings("all")
  public void setEmail(final String email) {
    this.email = email;
  }

  @JsonProperty("current_password")
  @java.lang.SuppressWarnings("all")
  public void setCurrentPassword(final String currentPassword) {
    this.currentPassword = currentPassword;
  }

  @JsonProperty("password")
  @java.lang.SuppressWarnings("all")
  public void setPassword(final String password) {
    this.password = password;
  }

  @JsonProperty("new_password")
  @java.lang.SuppressWarnings("all")
  public void setNewPassword(final String newPassword) {
    this.newPassword = newPassword;
  }

  @JsonProperty("mfa_code")
  @java.lang.SuppressWarnings("all")
  public void setMfaCode(final String mfaCode) {
    this.mfaCode = mfaCode;
  }

  @JsonProperty("ldap_id")
  @java.lang.SuppressWarnings("all")
  public void setLdapId(final String ldapId) {
    this.ldapId = ldapId;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof SwitchRequest)) return false;
    final SwitchRequest other = (SwitchRequest) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    final java.lang.Object this$currentService = this.getCurrentService();
    final java.lang.Object other$currentService = other.getCurrentService();
    if (this$currentService == null ? other$currentService != null : !this$currentService.equals(other$currentService)) return false;
    final java.lang.Object this$newService = this.getNewService();
    final java.lang.Object other$newService = other.getNewService();
    if (this$newService == null ? other$newService != null : !this$newService.equals(other$newService)) return false;
    final java.lang.Object this$email = this.getEmail();
    final java.lang.Object other$email = other.getEmail();
    if (this$email == null ? other$email != null : !this$email.equals(other$email)) return false;
    final java.lang.Object this$currentPassword = this.getCurrentPassword();
    final java.lang.Object other$currentPassword = other.getCurrentPassword();
    if (this$currentPassword == null ? other$currentPassword != null : !this$currentPassword.equals(other$currentPassword)) return false;
    final java.lang.Object this$password = this.getPassword();
    final java.lang.Object other$password = other.getPassword();
    if (this$password == null ? other$password != null : !this$password.equals(other$password)) return false;
    final java.lang.Object this$newPassword = this.getNewPassword();
    final java.lang.Object other$newPassword = other.getNewPassword();
    if (this$newPassword == null ? other$newPassword != null : !this$newPassword.equals(other$newPassword)) return false;
    final java.lang.Object this$mfaCode = this.getMfaCode();
    final java.lang.Object other$mfaCode = other.getMfaCode();
    if (this$mfaCode == null ? other$mfaCode != null : !this$mfaCode.equals(other$mfaCode)) return false;
    final java.lang.Object this$ldapId = this.getLdapId();
    final java.lang.Object other$ldapId = other.getLdapId();
    if (this$ldapId == null ? other$ldapId != null : !this$ldapId.equals(other$ldapId)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof SwitchRequest;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final java.lang.Object $currentService = this.getCurrentService();
    result = result * PRIME + ($currentService == null ? 43 : $currentService.hashCode());
    final java.lang.Object $newService = this.getNewService();
    result = result * PRIME + ($newService == null ? 43 : $newService.hashCode());
    final java.lang.Object $email = this.getEmail();
    result = result * PRIME + ($email == null ? 43 : $email.hashCode());
    final java.lang.Object $currentPassword = this.getCurrentPassword();
    result = result * PRIME + ($currentPassword == null ? 43 : $currentPassword.hashCode());
    final java.lang.Object $password = this.getPassword();
    result = result * PRIME + ($password == null ? 43 : $password.hashCode());
    final java.lang.Object $newPassword = this.getNewPassword();
    result = result * PRIME + ($newPassword == null ? 43 : $newPassword.hashCode());
    final java.lang.Object $mfaCode = this.getMfaCode();
    result = result * PRIME + ($mfaCode == null ? 43 : $mfaCode.hashCode());
    final java.lang.Object $ldapId = this.getLdapId();
    result = result * PRIME + ($ldapId == null ? 43 : $ldapId.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "SwitchRequest(currentService=" + this.getCurrentService() + ", newService=" + this.getNewService() + ", email=" + this.getEmail() + ", currentPassword=" + this.getCurrentPassword() + ", password=" + this.getPassword() + ", newPassword=" + this.getNewPassword() + ", mfaCode=" + this.getMfaCode() + ", ldapId=" + this.getLdapId() + ")";
  }
}
