// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2017-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model;

import com.fasterxml.jackson.annotation.JsonProperty;

public class UserSearch {
	@JsonProperty("term")
	private String term;
	@JsonProperty("team_id")
	private String teamId;
	@JsonProperty("not_in_team_id")
	private String notInTeamId;
	@JsonProperty("in_channel_id")
	private String inChannelId;
	@JsonProperty("not_in_channel_id")
	private String notInChannelId;
	@JsonProperty("allow_inactive")
	private boolean allowInactive;
	@JsonProperty("without_team")
	private boolean withoutTeam;

	@java.lang.SuppressWarnings("all")
	UserSearch(final String term, final String teamId, final String notInTeamId, final String inChannelId,
			final String notInChannelId, final boolean allowInactive, final boolean withoutTeam) {
		this.term = term;
		this.teamId = teamId;
		this.notInTeamId = notInTeamId;
		this.inChannelId = inChannelId;
		this.notInChannelId = notInChannelId;
		this.allowInactive = allowInactive;
		this.withoutTeam = withoutTeam;
	}

	@java.lang.SuppressWarnings("all")
	public static class UserSearchBuilder {
		@java.lang.SuppressWarnings("all")
		private String term;
		@java.lang.SuppressWarnings("all")
		private String teamId;
		@java.lang.SuppressWarnings("all")
		private String notInTeamId;
		@java.lang.SuppressWarnings("all")
		private String inChannelId;
		@java.lang.SuppressWarnings("all")
		private String notInChannelId;
		@java.lang.SuppressWarnings("all")
		private boolean allowInactive;
		@java.lang.SuppressWarnings("all")
		private boolean withoutTeam;

		@java.lang.SuppressWarnings("all")
		UserSearchBuilder() {
		}

		@JsonProperty("term")
		@java.lang.SuppressWarnings("all")
		public UserSearch.UserSearchBuilder term(final String term) {
			this.term = term;
			return this;
		}

		@JsonProperty("team_id")
		@java.lang.SuppressWarnings("all")
		public UserSearch.UserSearchBuilder teamId(final String teamId) {
			this.teamId = teamId;
			return this;
		}

		@JsonProperty("not_in_team_id")
		@java.lang.SuppressWarnings("all")
		public UserSearch.UserSearchBuilder notInTeamId(final String notInTeamId) {
			this.notInTeamId = notInTeamId;
			return this;
		}

		@JsonProperty("in_channel_id")
		@java.lang.SuppressWarnings("all")
		public UserSearch.UserSearchBuilder inChannelId(final String inChannelId) {
			this.inChannelId = inChannelId;
			return this;
		}

		@JsonProperty("not_in_channel_id")
		@java.lang.SuppressWarnings("all")
		public UserSearch.UserSearchBuilder notInChannelId(final String notInChannelId) {
			this.notInChannelId = notInChannelId;
			return this;
		}

		@JsonProperty("allow_inactive")
		@java.lang.SuppressWarnings("all")
		public UserSearch.UserSearchBuilder allowInactive(final boolean allowInactive) {
			this.allowInactive = allowInactive;
			return this;
		}

		@JsonProperty("without_team")
		@java.lang.SuppressWarnings("all")
		public UserSearch.UserSearchBuilder withoutTeam(final boolean withoutTeam) {
			this.withoutTeam = withoutTeam;
			return this;
		}

		@java.lang.SuppressWarnings("all")
		public UserSearch build() {
			return new UserSearch(this.term, this.teamId, this.notInTeamId, this.inChannelId, this.notInChannelId,
					this.allowInactive, this.withoutTeam);
		}

		@java.lang.Override
		@java.lang.SuppressWarnings("all")
		public java.lang.String toString() {
			return "UserSearch.UserSearchBuilder(term=" + this.term + ", teamId=" + this.teamId + ", notInTeamId="
					+ this.notInTeamId + ", inChannelId=" + this.inChannelId + ", notInChannelId=" + this.notInChannelId
					+ ", allowInactive=" + this.allowInactive + ", withoutTeam=" + this.withoutTeam + ")";
		}
	}

	@java.lang.SuppressWarnings("all")
	public static UserSearch.UserSearchBuilder builder() {
		return new UserSearch.UserSearchBuilder();
	}

	@java.lang.SuppressWarnings("all")
	public String getTerm() {
		return this.term;
	}

	@java.lang.SuppressWarnings("all")
	public String getTeamId() {
		return this.teamId;
	}

	@java.lang.SuppressWarnings("all")
	public String getNotInTeamId() {
		return this.notInTeamId;
	}

	@java.lang.SuppressWarnings("all")
	public String getInChannelId() {
		return this.inChannelId;
	}

	@java.lang.SuppressWarnings("all")
	public String getNotInChannelId() {
		return this.notInChannelId;
	}

	@java.lang.SuppressWarnings("all")
	public boolean isAllowInactive() {
		return this.allowInactive;
	}

	@java.lang.SuppressWarnings("all")
	public boolean isWithoutTeam() {
		return this.withoutTeam;
	}

	@JsonProperty("term")
	@java.lang.SuppressWarnings("all")
	public void setTerm(final String term) {
		this.term = term;
	}

	@JsonProperty("team_id")
	@java.lang.SuppressWarnings("all")
	public void setTeamId(final String teamId) {
		this.teamId = teamId;
	}

	@JsonProperty("not_in_team_id")
	@java.lang.SuppressWarnings("all")
	public void setNotInTeamId(final String notInTeamId) {
		this.notInTeamId = notInTeamId;
	}

	@JsonProperty("in_channel_id")
	@java.lang.SuppressWarnings("all")
	public void setInChannelId(final String inChannelId) {
		this.inChannelId = inChannelId;
	}

	@JsonProperty("not_in_channel_id")
	@java.lang.SuppressWarnings("all")
	public void setNotInChannelId(final String notInChannelId) {
		this.notInChannelId = notInChannelId;
	}

	@JsonProperty("allow_inactive")
	@java.lang.SuppressWarnings("all")
	public void setAllowInactive(final boolean allowInactive) {
		this.allowInactive = allowInactive;
	}

	@JsonProperty("without_team")
	@java.lang.SuppressWarnings("all")
	public void setWithoutTeam(final boolean withoutTeam) {
		this.withoutTeam = withoutTeam;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this)
			return true;
		if (!(o instanceof UserSearch))
			return false;
		final UserSearch other = (UserSearch) o;
		if (!other.canEqual((java.lang.Object) this))
			return false;
		if (this.isAllowInactive() != other.isAllowInactive())
			return false;
		if (this.isWithoutTeam() != other.isWithoutTeam())
			return false;
		final java.lang.Object this$term = this.getTerm();
		final java.lang.Object other$term = other.getTerm();
		if (this$term == null ? other$term != null : !this$term.equals(other$term))
			return false;
		final java.lang.Object this$teamId = this.getTeamId();
		final java.lang.Object other$teamId = other.getTeamId();
		if (this$teamId == null ? other$teamId != null : !this$teamId.equals(other$teamId))
			return false;
		final java.lang.Object this$notInTeamId = this.getNotInTeamId();
		final java.lang.Object other$notInTeamId = other.getNotInTeamId();
		if (this$notInTeamId == null ? other$notInTeamId != null : !this$notInTeamId.equals(other$notInTeamId))
			return false;
		final java.lang.Object this$inChannelId = this.getInChannelId();
		final java.lang.Object other$inChannelId = other.getInChannelId();
		if (this$inChannelId == null ? other$inChannelId != null : !this$inChannelId.equals(other$inChannelId))
			return false;
		final java.lang.Object this$notInChannelId = this.getNotInChannelId();
		final java.lang.Object other$notInChannelId = other.getNotInChannelId();
		if (this$notInChannelId == null ? other$notInChannelId != null
				: !this$notInChannelId.equals(other$notInChannelId))
			return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof UserSearch;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + (this.isAllowInactive() ? 79 : 97);
		result = result * PRIME + (this.isWithoutTeam() ? 79 : 97);
		final java.lang.Object $term = this.getTerm();
		result = result * PRIME + ($term == null ? 43 : $term.hashCode());
		final java.lang.Object $teamId = this.getTeamId();
		result = result * PRIME + ($teamId == null ? 43 : $teamId.hashCode());
		final java.lang.Object $notInTeamId = this.getNotInTeamId();
		result = result * PRIME + ($notInTeamId == null ? 43 : $notInTeamId.hashCode());
		final java.lang.Object $inChannelId = this.getInChannelId();
		result = result * PRIME + ($inChannelId == null ? 43 : $inChannelId.hashCode());
		final java.lang.Object $notInChannelId = this.getNotInChannelId();
		result = result * PRIME + ($notInChannelId == null ? 43 : $notInChannelId.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "UserSearch(term=" + this.getTerm() + ", teamId=" + this.getTeamId() + ", notInTeamId="
				+ this.getNotInTeamId() + ", inChannelId=" + this.getInChannelId() + ", notInChannelId="
				+ this.getNotInChannelId() + ", allowInactive=" + this.isAllowInactive() + ", withoutTeam="
				+ this.isWithoutTeam() + ")";
	}
}
