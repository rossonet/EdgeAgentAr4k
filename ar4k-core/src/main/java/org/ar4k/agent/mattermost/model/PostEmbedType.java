// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2019 Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.io.IOException;
import java.util.Arrays;

import org.ar4k.agent.mattermost.model.PostEmbedType.PostEmbedTypeDeserializer;
import org.ar4k.agent.mattermost.model.serialize.HasCodeSerializer;

/**
 * Post embed type.
 * 
 * @since Mattermost Server 5.8
 */
@JsonSerialize(using = HasCodeSerializer.class)
@JsonDeserialize(using = PostEmbedTypeDeserializer.class)
public enum PostEmbedType implements HasCode<PostEmbedType> {
  IMAGE("image"), MESSAGE_ATTACHMENT("message_attachment"), OPENGRAPH("opengraph");
  private final String code;

  public static PostEmbedType of(String type) {
    return Arrays.stream(values()).filter(t -> t.getCode().equals(type)).findFirst().orElse(null);
  }


  public static class PostEmbedTypeDeserializer extends JsonDeserializer<PostEmbedType> {
    @Override
    public PostEmbedType deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
      String code = p.getText();
      return PostEmbedType.of(code);
    }
  }

  @java.lang.SuppressWarnings("all")
  public String getCode() {
    return this.code;
  }

  @java.lang.SuppressWarnings("all")
  private PostEmbedType(final String code) {
    this.code = code;
  }
}
