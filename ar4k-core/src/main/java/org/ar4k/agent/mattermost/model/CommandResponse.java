// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2016-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model;

import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Command execution response.
 * 
 * @author Takayuki Maruyama
 */
public class CommandResponse {
  @JsonProperty("response_type")
  private CommandResponseType responseType;
  @JsonProperty("text")
  private String text;
  @JsonProperty("username")
  private String username;
  @JsonProperty("icon_url")
  private String iconUrl;
  @JsonProperty("type")
  private PostType type;
  @JsonProperty("props")
  private Map<String, String> props;
  @JsonProperty("goto_location")
  private String gotoLocation;
  @JsonProperty("attachments")
  private List<SlackAttachment> attachments;
  /* @since Mattermost Server 5.6 */
  private String triggerId;
  /* @since Mattermost Server 5.6 */
  private List<CommandResponse> extraResponses;
  /* @since Mattermost Server 5.8 */
  private String channelId;
  /* @since Mattermost Server 5.20 */
  private boolean skipSlackParsing;

  @java.lang.SuppressWarnings("all")
  public CommandResponse() {
  }

  @java.lang.SuppressWarnings("all")
  public CommandResponseType getResponseType() {
    return this.responseType;
  }

  @java.lang.SuppressWarnings("all")
  public String getText() {
    return this.text;
  }

  @java.lang.SuppressWarnings("all")
  public String getUsername() {
    return this.username;
  }

  @java.lang.SuppressWarnings("all")
  public String getIconUrl() {
    return this.iconUrl;
  }

  @java.lang.SuppressWarnings("all")
  public PostType getType() {
    return this.type;
  }

  @java.lang.SuppressWarnings("all")
  public Map<String, String> getProps() {
    return this.props;
  }

  @java.lang.SuppressWarnings("all")
  public String getGotoLocation() {
    return this.gotoLocation;
  }

  @java.lang.SuppressWarnings("all")
  public List<SlackAttachment> getAttachments() {
    return this.attachments;
  }

  @java.lang.SuppressWarnings("all")
  public String getTriggerId() {
    return this.triggerId;
  }

  @java.lang.SuppressWarnings("all")
  public List<CommandResponse> getExtraResponses() {
    return this.extraResponses;
  }

  @java.lang.SuppressWarnings("all")
  public String getChannelId() {
    return this.channelId;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isSkipSlackParsing() {
    return this.skipSlackParsing;
  }

  @JsonProperty("response_type")
  @java.lang.SuppressWarnings("all")
  public void setResponseType(final CommandResponseType responseType) {
    this.responseType = responseType;
  }

  @JsonProperty("text")
  @java.lang.SuppressWarnings("all")
  public void setText(final String text) {
    this.text = text;
  }

  @JsonProperty("username")
  @java.lang.SuppressWarnings("all")
  public void setUsername(final String username) {
    this.username = username;
  }

  @JsonProperty("icon_url")
  @java.lang.SuppressWarnings("all")
  public void setIconUrl(final String iconUrl) {
    this.iconUrl = iconUrl;
  }

  @JsonProperty("type")
  @java.lang.SuppressWarnings("all")
  public void setType(final PostType type) {
    this.type = type;
  }

  @JsonProperty("props")
  @java.lang.SuppressWarnings("all")
  public void setProps(final Map<String, String> props) {
    this.props = props;
  }

  @JsonProperty("goto_location")
  @java.lang.SuppressWarnings("all")
  public void setGotoLocation(final String gotoLocation) {
    this.gotoLocation = gotoLocation;
  }

  @JsonProperty("attachments")
  @java.lang.SuppressWarnings("all")
  public void setAttachments(final List<SlackAttachment> attachments) {
    this.attachments = attachments;
  }

  @java.lang.SuppressWarnings("all")
  public void setTriggerId(final String triggerId) {
    this.triggerId = triggerId;
  }

  @java.lang.SuppressWarnings("all")
  public void setExtraResponses(final List<CommandResponse> extraResponses) {
    this.extraResponses = extraResponses;
  }

  @java.lang.SuppressWarnings("all")
  public void setChannelId(final String channelId) {
    this.channelId = channelId;
  }

  @java.lang.SuppressWarnings("all")
  public void setSkipSlackParsing(final boolean skipSlackParsing) {
    this.skipSlackParsing = skipSlackParsing;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof CommandResponse)) return false;
    final CommandResponse other = (CommandResponse) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    if (this.isSkipSlackParsing() != other.isSkipSlackParsing()) return false;
    final java.lang.Object this$responseType = this.getResponseType();
    final java.lang.Object other$responseType = other.getResponseType();
    if (this$responseType == null ? other$responseType != null : !this$responseType.equals(other$responseType)) return false;
    final java.lang.Object this$text = this.getText();
    final java.lang.Object other$text = other.getText();
    if (this$text == null ? other$text != null : !this$text.equals(other$text)) return false;
    final java.lang.Object this$username = this.getUsername();
    final java.lang.Object other$username = other.getUsername();
    if (this$username == null ? other$username != null : !this$username.equals(other$username)) return false;
    final java.lang.Object this$iconUrl = this.getIconUrl();
    final java.lang.Object other$iconUrl = other.getIconUrl();
    if (this$iconUrl == null ? other$iconUrl != null : !this$iconUrl.equals(other$iconUrl)) return false;
    final java.lang.Object this$type = this.getType();
    final java.lang.Object other$type = other.getType();
    if (this$type == null ? other$type != null : !this$type.equals(other$type)) return false;
    final java.lang.Object this$props = this.getProps();
    final java.lang.Object other$props = other.getProps();
    if (this$props == null ? other$props != null : !this$props.equals(other$props)) return false;
    final java.lang.Object this$gotoLocation = this.getGotoLocation();
    final java.lang.Object other$gotoLocation = other.getGotoLocation();
    if (this$gotoLocation == null ? other$gotoLocation != null : !this$gotoLocation.equals(other$gotoLocation)) return false;
    final java.lang.Object this$attachments = this.getAttachments();
    final java.lang.Object other$attachments = other.getAttachments();
    if (this$attachments == null ? other$attachments != null : !this$attachments.equals(other$attachments)) return false;
    final java.lang.Object this$triggerId = this.getTriggerId();
    final java.lang.Object other$triggerId = other.getTriggerId();
    if (this$triggerId == null ? other$triggerId != null : !this$triggerId.equals(other$triggerId)) return false;
    final java.lang.Object this$extraResponses = this.getExtraResponses();
    final java.lang.Object other$extraResponses = other.getExtraResponses();
    if (this$extraResponses == null ? other$extraResponses != null : !this$extraResponses.equals(other$extraResponses)) return false;
    final java.lang.Object this$channelId = this.getChannelId();
    final java.lang.Object other$channelId = other.getChannelId();
    if (this$channelId == null ? other$channelId != null : !this$channelId.equals(other$channelId)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof CommandResponse;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + (this.isSkipSlackParsing() ? 79 : 97);
    final java.lang.Object $responseType = this.getResponseType();
    result = result * PRIME + ($responseType == null ? 43 : $responseType.hashCode());
    final java.lang.Object $text = this.getText();
    result = result * PRIME + ($text == null ? 43 : $text.hashCode());
    final java.lang.Object $username = this.getUsername();
    result = result * PRIME + ($username == null ? 43 : $username.hashCode());
    final java.lang.Object $iconUrl = this.getIconUrl();
    result = result * PRIME + ($iconUrl == null ? 43 : $iconUrl.hashCode());
    final java.lang.Object $type = this.getType();
    result = result * PRIME + ($type == null ? 43 : $type.hashCode());
    final java.lang.Object $props = this.getProps();
    result = result * PRIME + ($props == null ? 43 : $props.hashCode());
    final java.lang.Object $gotoLocation = this.getGotoLocation();
    result = result * PRIME + ($gotoLocation == null ? 43 : $gotoLocation.hashCode());
    final java.lang.Object $attachments = this.getAttachments();
    result = result * PRIME + ($attachments == null ? 43 : $attachments.hashCode());
    final java.lang.Object $triggerId = this.getTriggerId();
    result = result * PRIME + ($triggerId == null ? 43 : $triggerId.hashCode());
    final java.lang.Object $extraResponses = this.getExtraResponses();
    result = result * PRIME + ($extraResponses == null ? 43 : $extraResponses.hashCode());
    final java.lang.Object $channelId = this.getChannelId();
    result = result * PRIME + ($channelId == null ? 43 : $channelId.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "CommandResponse(responseType=" + this.getResponseType() + ", text=" + this.getText() + ", username=" + this.getUsername() + ", iconUrl=" + this.getIconUrl() + ", type=" + this.getType() + ", props=" + this.getProps() + ", gotoLocation=" + this.getGotoLocation() + ", attachments=" + this.getAttachments() + ", triggerId=" + this.getTriggerId() + ", extraResponses=" + this.getExtraResponses() + ", channelId=" + this.getChannelId() + ", skipSlackParsing=" + this.isSkipSlackParsing() + ")";
  }
}
