// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2016-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Access response.
 * 
 * @author Takayuki Maruyama
 */
public class AccessResponse {
  @JsonProperty("access_token")
  private String accessToken;
  @JsonProperty("token_type")
  private String tokenType;
  @JsonProperty("expires_in")
  private int expiresIn;
  @JsonProperty("scope")
  private String scope;
  @JsonProperty("refresh_token")
  private String refreshToken;

  @java.lang.SuppressWarnings("all")
  public AccessResponse() {
  }

  @java.lang.SuppressWarnings("all")
  public String getAccessToken() {
    return this.accessToken;
  }

  @java.lang.SuppressWarnings("all")
  public String getTokenType() {
    return this.tokenType;
  }

  @java.lang.SuppressWarnings("all")
  public int getExpiresIn() {
    return this.expiresIn;
  }

  @java.lang.SuppressWarnings("all")
  public String getScope() {
    return this.scope;
  }

  @java.lang.SuppressWarnings("all")
  public String getRefreshToken() {
    return this.refreshToken;
  }

  @JsonProperty("access_token")
  @java.lang.SuppressWarnings("all")
  public void setAccessToken(final String accessToken) {
    this.accessToken = accessToken;
  }

  @JsonProperty("token_type")
  @java.lang.SuppressWarnings("all")
  public void setTokenType(final String tokenType) {
    this.tokenType = tokenType;
  }

  @JsonProperty("expires_in")
  @java.lang.SuppressWarnings("all")
  public void setExpiresIn(final int expiresIn) {
    this.expiresIn = expiresIn;
  }

  @JsonProperty("scope")
  @java.lang.SuppressWarnings("all")
  public void setScope(final String scope) {
    this.scope = scope;
  }

  @JsonProperty("refresh_token")
  @java.lang.SuppressWarnings("all")
  public void setRefreshToken(final String refreshToken) {
    this.refreshToken = refreshToken;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof AccessResponse)) return false;
    final AccessResponse other = (AccessResponse) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    if (this.getExpiresIn() != other.getExpiresIn()) return false;
    final java.lang.Object this$accessToken = this.getAccessToken();
    final java.lang.Object other$accessToken = other.getAccessToken();
    if (this$accessToken == null ? other$accessToken != null : !this$accessToken.equals(other$accessToken)) return false;
    final java.lang.Object this$tokenType = this.getTokenType();
    final java.lang.Object other$tokenType = other.getTokenType();
    if (this$tokenType == null ? other$tokenType != null : !this$tokenType.equals(other$tokenType)) return false;
    final java.lang.Object this$scope = this.getScope();
    final java.lang.Object other$scope = other.getScope();
    if (this$scope == null ? other$scope != null : !this$scope.equals(other$scope)) return false;
    final java.lang.Object this$refreshToken = this.getRefreshToken();
    final java.lang.Object other$refreshToken = other.getRefreshToken();
    if (this$refreshToken == null ? other$refreshToken != null : !this$refreshToken.equals(other$refreshToken)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof AccessResponse;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + this.getExpiresIn();
    final java.lang.Object $accessToken = this.getAccessToken();
    result = result * PRIME + ($accessToken == null ? 43 : $accessToken.hashCode());
    final java.lang.Object $tokenType = this.getTokenType();
    result = result * PRIME + ($tokenType == null ? 43 : $tokenType.hashCode());
    final java.lang.Object $scope = this.getScope();
    result = result * PRIME + ($scope == null ? 43 : $scope.hashCode());
    final java.lang.Object $refreshToken = this.getRefreshToken();
    result = result * PRIME + ($refreshToken == null ? 43 : $refreshToken.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "AccessResponse(accessToken=" + this.getAccessToken() + ", tokenType=" + this.getTokenType() + ", expiresIn=" + this.getExpiresIn() + ", scope=" + this.getScope() + ", refreshToken=" + this.getRefreshToken() + ")";
  }
}
