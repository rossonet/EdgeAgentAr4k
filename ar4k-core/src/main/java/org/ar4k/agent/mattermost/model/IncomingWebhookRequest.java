// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2016-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import java.util.Map;

@JsonInclude(JsonInclude.Include.NON_NULL)
public class IncomingWebhookRequest {
	@JsonProperty("text")
	private String text;
	@JsonProperty("username")
	private String username;
	@JsonProperty("icon_url")
	private String iconUrl;
	@JsonProperty("channel")
	private String channel;
	@JsonProperty("props")
	private Map<String, String> props;
	@JsonProperty("attachments")
	private List<SlackAttachment> attachments;
	@JsonProperty("type")
	private String type;
	/* @since Mattermost Server 5.14 */
	private String iconEmoji;

	@java.lang.SuppressWarnings("all")
	public IncomingWebhookRequest() {
	}

	@java.lang.SuppressWarnings("all")
	public String getText() {
		return this.text;
	}

	@java.lang.SuppressWarnings("all")
	public String getUsername() {
		return this.username;
	}

	@java.lang.SuppressWarnings("all")
	public String getIconUrl() {
		return this.iconUrl;
	}

	@java.lang.SuppressWarnings("all")
	public String getChannel() {
		return this.channel;
	}

	@java.lang.SuppressWarnings("all")
	public Map<String, String> getProps() {
		return this.props;
	}

	@java.lang.SuppressWarnings("all")
	public List<SlackAttachment> getAttachments() {
		return this.attachments;
	}

	@java.lang.SuppressWarnings("all")
	public String getType() {
		return this.type;
	}

	@java.lang.SuppressWarnings("all")
	public String getIconEmoji() {
		return this.iconEmoji;
	}

	@JsonProperty("text")
	@java.lang.SuppressWarnings("all")
	public void setText(final String text) {
		this.text = text;
	}

	@JsonProperty("username")
	@java.lang.SuppressWarnings("all")
	public void setUsername(final String username) {
		this.username = username;
	}

	@JsonProperty("icon_url")
	@java.lang.SuppressWarnings("all")
	public void setIconUrl(final String iconUrl) {
		this.iconUrl = iconUrl;
	}

	@JsonProperty("channel")
	@java.lang.SuppressWarnings("all")
	public void setChannel(final String channel) {
		this.channel = channel;
	}

	@JsonProperty("props")
	@java.lang.SuppressWarnings("all")
	public void setProps(final Map<String, String> props) {
		this.props = props;
	}

	@JsonProperty("attachments")
	@java.lang.SuppressWarnings("all")
	public void setAttachments(final List<SlackAttachment> attachments) {
		this.attachments = attachments;
	}

	@JsonProperty("type")
	@java.lang.SuppressWarnings("all")
	public void setType(final String type) {
		this.type = type;
	}

	@java.lang.SuppressWarnings("all")
	public void setIconEmoji(final String iconEmoji) {
		this.iconEmoji = iconEmoji;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this)
			return true;
		if (!(o instanceof IncomingWebhookRequest))
			return false;
		final IncomingWebhookRequest other = (IncomingWebhookRequest) o;
		if (!other.canEqual((java.lang.Object) this))
			return false;
		final java.lang.Object this$text = this.getText();
		final java.lang.Object other$text = other.getText();
		if (this$text == null ? other$text != null : !this$text.equals(other$text))
			return false;
		final java.lang.Object this$username = this.getUsername();
		final java.lang.Object other$username = other.getUsername();
		if (this$username == null ? other$username != null : !this$username.equals(other$username))
			return false;
		final java.lang.Object this$iconUrl = this.getIconUrl();
		final java.lang.Object other$iconUrl = other.getIconUrl();
		if (this$iconUrl == null ? other$iconUrl != null : !this$iconUrl.equals(other$iconUrl))
			return false;
		final java.lang.Object this$channel = this.getChannel();
		final java.lang.Object other$channel = other.getChannel();
		if (this$channel == null ? other$channel != null : !this$channel.equals(other$channel))
			return false;
		final java.lang.Object this$props = this.getProps();
		final java.lang.Object other$props = other.getProps();
		if (this$props == null ? other$props != null : !this$props.equals(other$props))
			return false;
		final java.lang.Object this$attachments = this.getAttachments();
		final java.lang.Object other$attachments = other.getAttachments();
		if (this$attachments == null ? other$attachments != null : !this$attachments.equals(other$attachments))
			return false;
		final java.lang.Object this$type = this.getType();
		final java.lang.Object other$type = other.getType();
		if (this$type == null ? other$type != null : !this$type.equals(other$type))
			return false;
		final java.lang.Object this$iconEmoji = this.getIconEmoji();
		final java.lang.Object other$iconEmoji = other.getIconEmoji();
		if (this$iconEmoji == null ? other$iconEmoji != null : !this$iconEmoji.equals(other$iconEmoji))
			return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof IncomingWebhookRequest;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final java.lang.Object $text = this.getText();
		result = result * PRIME + ($text == null ? 43 : $text.hashCode());
		final java.lang.Object $username = this.getUsername();
		result = result * PRIME + ($username == null ? 43 : $username.hashCode());
		final java.lang.Object $iconUrl = this.getIconUrl();
		result = result * PRIME + ($iconUrl == null ? 43 : $iconUrl.hashCode());
		final java.lang.Object $channel = this.getChannel();
		result = result * PRIME + ($channel == null ? 43 : $channel.hashCode());
		final java.lang.Object $props = this.getProps();
		result = result * PRIME + ($props == null ? 43 : $props.hashCode());
		final java.lang.Object $attachments = this.getAttachments();
		result = result * PRIME + ($attachments == null ? 43 : $attachments.hashCode());
		final java.lang.Object $type = this.getType();
		result = result * PRIME + ($type == null ? 43 : $type.hashCode());
		final java.lang.Object $iconEmoji = this.getIconEmoji();
		result = result * PRIME + ($iconEmoji == null ? 43 : $iconEmoji.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "IncomingWebhookRequest(text=" + this.getText() + ", username=" + this.getUsername() + ", iconUrl="
				+ this.getIconUrl() + ", channel=" + this.getChannel() + ", props=" + this.getProps() + ", attachments="
				+ this.getAttachments() + ", type=" + this.getType() + ", iconEmoji=" + this.getIconEmoji() + ")";
	}
}
