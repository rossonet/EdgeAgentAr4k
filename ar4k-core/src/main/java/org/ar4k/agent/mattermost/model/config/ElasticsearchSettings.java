// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2017 Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model.config;

/**
 * Elasticsearch settings.
 * 
 * @author Takayuki Maruyama
 * @since Mattermost Server 4.1 (Enterprise Edition)
 */
public class ElasticsearchSettings {
  private String connectionUrl;
  private String username;
  private String password;
  private boolean enableIndexing;
  private boolean enableSearching;
  private boolean sniff = true;
  private int postIndexReplicas;
  private int postIndexShards;
  /* @since Mattermost Server 4.2 (Enterprise Edition) */
  private int aggregatePostsAfterDays = 365;
  /* @since Mattermost Server 4.2 (Enterprise Edition) */
  private String postsAggregatorJobStartTime = "03:00";
  /* @since Mattermost Server 4.3 (Enterprise Edition) */
  private String indexPrefix;
  /* @since Mattermost Server 4.4 (Enterprise Edition) */
  private int liveIndexingBatchSize = 1;
  /* @since Mattermost Server 4.4 (Enterprise Edition) */
  private int requestTimeoutSeconds = 30;
  /* @since Mattermost Server 4.4 (Enterprise Edition) */
  private int bulkIndexingTimeWindowSeconds = 3600;
  /* @since Mattermost Server 5.10 */
  private boolean enableAutocomplete;
  /* @since Mattermost Server 5.10 */
  private int channelIndexReplicas = 1;
  /* @since Mattermost Server 5.10 */
  private int channelIndexShards = 1;
  /* @since Mattermost Server 5.10 */
  private int userIndexReplicas = 1;
  /* @since Mattermost Server 5.10 */
  private int userIndexShards = 1;
  /* @since Mattermost Server 5.13.0 */
  private boolean skipTlsVerification;
  /* @since Mattermost Server 5.14.0 */
  private String trace;

  @java.lang.SuppressWarnings("all")
  public ElasticsearchSettings() {
  }

  @java.lang.SuppressWarnings("all")
  public String getConnectionUrl() {
    return this.connectionUrl;
  }

  @java.lang.SuppressWarnings("all")
  public String getUsername() {
    return this.username;
  }

  @java.lang.SuppressWarnings("all")
  public String getPassword() {
    return this.password;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableIndexing() {
    return this.enableIndexing;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableSearching() {
    return this.enableSearching;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isSniff() {
    return this.sniff;
  }

  @java.lang.SuppressWarnings("all")
  public int getPostIndexReplicas() {
    return this.postIndexReplicas;
  }

  @java.lang.SuppressWarnings("all")
  public int getPostIndexShards() {
    return this.postIndexShards;
  }

  @java.lang.SuppressWarnings("all")
  public int getAggregatePostsAfterDays() {
    return this.aggregatePostsAfterDays;
  }

  @java.lang.SuppressWarnings("all")
  public String getPostsAggregatorJobStartTime() {
    return this.postsAggregatorJobStartTime;
  }

  @java.lang.SuppressWarnings("all")
  public String getIndexPrefix() {
    return this.indexPrefix;
  }

  @java.lang.SuppressWarnings("all")
  public int getLiveIndexingBatchSize() {
    return this.liveIndexingBatchSize;
  }

  @java.lang.SuppressWarnings("all")
  public int getRequestTimeoutSeconds() {
    return this.requestTimeoutSeconds;
  }

  @java.lang.SuppressWarnings("all")
  public int getBulkIndexingTimeWindowSeconds() {
    return this.bulkIndexingTimeWindowSeconds;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableAutocomplete() {
    return this.enableAutocomplete;
  }

  @java.lang.SuppressWarnings("all")
  public int getChannelIndexReplicas() {
    return this.channelIndexReplicas;
  }

  @java.lang.SuppressWarnings("all")
  public int getChannelIndexShards() {
    return this.channelIndexShards;
  }

  @java.lang.SuppressWarnings("all")
  public int getUserIndexReplicas() {
    return this.userIndexReplicas;
  }

  @java.lang.SuppressWarnings("all")
  public int getUserIndexShards() {
    return this.userIndexShards;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isSkipTlsVerification() {
    return this.skipTlsVerification;
  }

  @java.lang.SuppressWarnings("all")
  public String getTrace() {
    return this.trace;
  }

  @java.lang.SuppressWarnings("all")
  public void setConnectionUrl(final String connectionUrl) {
    this.connectionUrl = connectionUrl;
  }

  @java.lang.SuppressWarnings("all")
  public void setUsername(final String username) {
    this.username = username;
  }

  @java.lang.SuppressWarnings("all")
  public void setPassword(final String password) {
    this.password = password;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableIndexing(final boolean enableIndexing) {
    this.enableIndexing = enableIndexing;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableSearching(final boolean enableSearching) {
    this.enableSearching = enableSearching;
  }

  @java.lang.SuppressWarnings("all")
  public void setSniff(final boolean sniff) {
    this.sniff = sniff;
  }

  @java.lang.SuppressWarnings("all")
  public void setPostIndexReplicas(final int postIndexReplicas) {
    this.postIndexReplicas = postIndexReplicas;
  }

  @java.lang.SuppressWarnings("all")
  public void setPostIndexShards(final int postIndexShards) {
    this.postIndexShards = postIndexShards;
  }

  @java.lang.SuppressWarnings("all")
  public void setAggregatePostsAfterDays(final int aggregatePostsAfterDays) {
    this.aggregatePostsAfterDays = aggregatePostsAfterDays;
  }

  @java.lang.SuppressWarnings("all")
  public void setPostsAggregatorJobStartTime(final String postsAggregatorJobStartTime) {
    this.postsAggregatorJobStartTime = postsAggregatorJobStartTime;
  }

  @java.lang.SuppressWarnings("all")
  public void setIndexPrefix(final String indexPrefix) {
    this.indexPrefix = indexPrefix;
  }

  @java.lang.SuppressWarnings("all")
  public void setLiveIndexingBatchSize(final int liveIndexingBatchSize) {
    this.liveIndexingBatchSize = liveIndexingBatchSize;
  }

  @java.lang.SuppressWarnings("all")
  public void setRequestTimeoutSeconds(final int requestTimeoutSeconds) {
    this.requestTimeoutSeconds = requestTimeoutSeconds;
  }

  @java.lang.SuppressWarnings("all")
  public void setBulkIndexingTimeWindowSeconds(final int bulkIndexingTimeWindowSeconds) {
    this.bulkIndexingTimeWindowSeconds = bulkIndexingTimeWindowSeconds;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableAutocomplete(final boolean enableAutocomplete) {
    this.enableAutocomplete = enableAutocomplete;
  }

  @java.lang.SuppressWarnings("all")
  public void setChannelIndexReplicas(final int channelIndexReplicas) {
    this.channelIndexReplicas = channelIndexReplicas;
  }

  @java.lang.SuppressWarnings("all")
  public void setChannelIndexShards(final int channelIndexShards) {
    this.channelIndexShards = channelIndexShards;
  }

  @java.lang.SuppressWarnings("all")
  public void setUserIndexReplicas(final int userIndexReplicas) {
    this.userIndexReplicas = userIndexReplicas;
  }

  @java.lang.SuppressWarnings("all")
  public void setUserIndexShards(final int userIndexShards) {
    this.userIndexShards = userIndexShards;
  }

  @java.lang.SuppressWarnings("all")
  public void setSkipTlsVerification(final boolean skipTlsVerification) {
    this.skipTlsVerification = skipTlsVerification;
  }

  @java.lang.SuppressWarnings("all")
  public void setTrace(final String trace) {
    this.trace = trace;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof ElasticsearchSettings)) return false;
    final ElasticsearchSettings other = (ElasticsearchSettings) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    if (this.isEnableIndexing() != other.isEnableIndexing()) return false;
    if (this.isEnableSearching() != other.isEnableSearching()) return false;
    if (this.isSniff() != other.isSniff()) return false;
    if (this.getPostIndexReplicas() != other.getPostIndexReplicas()) return false;
    if (this.getPostIndexShards() != other.getPostIndexShards()) return false;
    if (this.getAggregatePostsAfterDays() != other.getAggregatePostsAfterDays()) return false;
    if (this.getLiveIndexingBatchSize() != other.getLiveIndexingBatchSize()) return false;
    if (this.getRequestTimeoutSeconds() != other.getRequestTimeoutSeconds()) return false;
    if (this.getBulkIndexingTimeWindowSeconds() != other.getBulkIndexingTimeWindowSeconds()) return false;
    if (this.isEnableAutocomplete() != other.isEnableAutocomplete()) return false;
    if (this.getChannelIndexReplicas() != other.getChannelIndexReplicas()) return false;
    if (this.getChannelIndexShards() != other.getChannelIndexShards()) return false;
    if (this.getUserIndexReplicas() != other.getUserIndexReplicas()) return false;
    if (this.getUserIndexShards() != other.getUserIndexShards()) return false;
    if (this.isSkipTlsVerification() != other.isSkipTlsVerification()) return false;
    final java.lang.Object this$connectionUrl = this.getConnectionUrl();
    final java.lang.Object other$connectionUrl = other.getConnectionUrl();
    if (this$connectionUrl == null ? other$connectionUrl != null : !this$connectionUrl.equals(other$connectionUrl)) return false;
    final java.lang.Object this$username = this.getUsername();
    final java.lang.Object other$username = other.getUsername();
    if (this$username == null ? other$username != null : !this$username.equals(other$username)) return false;
    final java.lang.Object this$password = this.getPassword();
    final java.lang.Object other$password = other.getPassword();
    if (this$password == null ? other$password != null : !this$password.equals(other$password)) return false;
    final java.lang.Object this$postsAggregatorJobStartTime = this.getPostsAggregatorJobStartTime();
    final java.lang.Object other$postsAggregatorJobStartTime = other.getPostsAggregatorJobStartTime();
    if (this$postsAggregatorJobStartTime == null ? other$postsAggregatorJobStartTime != null : !this$postsAggregatorJobStartTime.equals(other$postsAggregatorJobStartTime)) return false;
    final java.lang.Object this$indexPrefix = this.getIndexPrefix();
    final java.lang.Object other$indexPrefix = other.getIndexPrefix();
    if (this$indexPrefix == null ? other$indexPrefix != null : !this$indexPrefix.equals(other$indexPrefix)) return false;
    final java.lang.Object this$trace = this.getTrace();
    final java.lang.Object other$trace = other.getTrace();
    if (this$trace == null ? other$trace != null : !this$trace.equals(other$trace)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof ElasticsearchSettings;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + (this.isEnableIndexing() ? 79 : 97);
    result = result * PRIME + (this.isEnableSearching() ? 79 : 97);
    result = result * PRIME + (this.isSniff() ? 79 : 97);
    result = result * PRIME + this.getPostIndexReplicas();
    result = result * PRIME + this.getPostIndexShards();
    result = result * PRIME + this.getAggregatePostsAfterDays();
    result = result * PRIME + this.getLiveIndexingBatchSize();
    result = result * PRIME + this.getRequestTimeoutSeconds();
    result = result * PRIME + this.getBulkIndexingTimeWindowSeconds();
    result = result * PRIME + (this.isEnableAutocomplete() ? 79 : 97);
    result = result * PRIME + this.getChannelIndexReplicas();
    result = result * PRIME + this.getChannelIndexShards();
    result = result * PRIME + this.getUserIndexReplicas();
    result = result * PRIME + this.getUserIndexShards();
    result = result * PRIME + (this.isSkipTlsVerification() ? 79 : 97);
    final java.lang.Object $connectionUrl = this.getConnectionUrl();
    result = result * PRIME + ($connectionUrl == null ? 43 : $connectionUrl.hashCode());
    final java.lang.Object $username = this.getUsername();
    result = result * PRIME + ($username == null ? 43 : $username.hashCode());
    final java.lang.Object $password = this.getPassword();
    result = result * PRIME + ($password == null ? 43 : $password.hashCode());
    final java.lang.Object $postsAggregatorJobStartTime = this.getPostsAggregatorJobStartTime();
    result = result * PRIME + ($postsAggregatorJobStartTime == null ? 43 : $postsAggregatorJobStartTime.hashCode());
    final java.lang.Object $indexPrefix = this.getIndexPrefix();
    result = result * PRIME + ($indexPrefix == null ? 43 : $indexPrefix.hashCode());
    final java.lang.Object $trace = this.getTrace();
    result = result * PRIME + ($trace == null ? 43 : $trace.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "ElasticsearchSettings(connectionUrl=" + this.getConnectionUrl() + ", username=" + this.getUsername() + ", password=" + this.getPassword() + ", enableIndexing=" + this.isEnableIndexing() + ", enableSearching=" + this.isEnableSearching() + ", sniff=" + this.isSniff() + ", postIndexReplicas=" + this.getPostIndexReplicas() + ", postIndexShards=" + this.getPostIndexShards() + ", aggregatePostsAfterDays=" + this.getAggregatePostsAfterDays() + ", postsAggregatorJobStartTime=" + this.getPostsAggregatorJobStartTime() + ", indexPrefix=" + this.getIndexPrefix() + ", liveIndexingBatchSize=" + this.getLiveIndexingBatchSize() + ", requestTimeoutSeconds=" + this.getRequestTimeoutSeconds() + ", bulkIndexingTimeWindowSeconds=" + this.getBulkIndexingTimeWindowSeconds() + ", enableAutocomplete=" + this.isEnableAutocomplete() + ", channelIndexReplicas=" + this.getChannelIndexReplicas() + ", channelIndexShards=" + this.getChannelIndexShards() + ", userIndexReplicas=" + this.getUserIndexReplicas() + ", userIndexShards=" + this.getUserIndexShards() + ", skipTlsVerification=" + this.isSkipTlsVerification() + ", trace=" + this.getTrace() + ")";
  }
}
