// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2017 Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model.config;

/**
 * Announcement settings.
 * 
 * @author Takayuki Maruyama
 * @since Mattermost Server 3.10 (E10)
 */
public class AnnouncementSettings {
  private boolean enableBanner;
  private String bannerText;
  private String bannerColor;
  private String bannerTextColor;
  private boolean allowBannerDismissal;

  @java.lang.SuppressWarnings("all")
  public AnnouncementSettings() {
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableBanner() {
    return this.enableBanner;
  }

  @java.lang.SuppressWarnings("all")
  public String getBannerText() {
    return this.bannerText;
  }

  @java.lang.SuppressWarnings("all")
  public String getBannerColor() {
    return this.bannerColor;
  }

  @java.lang.SuppressWarnings("all")
  public String getBannerTextColor() {
    return this.bannerTextColor;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isAllowBannerDismissal() {
    return this.allowBannerDismissal;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableBanner(final boolean enableBanner) {
    this.enableBanner = enableBanner;
  }

  @java.lang.SuppressWarnings("all")
  public void setBannerText(final String bannerText) {
    this.bannerText = bannerText;
  }

  @java.lang.SuppressWarnings("all")
  public void setBannerColor(final String bannerColor) {
    this.bannerColor = bannerColor;
  }

  @java.lang.SuppressWarnings("all")
  public void setBannerTextColor(final String bannerTextColor) {
    this.bannerTextColor = bannerTextColor;
  }

  @java.lang.SuppressWarnings("all")
  public void setAllowBannerDismissal(final boolean allowBannerDismissal) {
    this.allowBannerDismissal = allowBannerDismissal;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof AnnouncementSettings)) return false;
    final AnnouncementSettings other = (AnnouncementSettings) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    if (this.isEnableBanner() != other.isEnableBanner()) return false;
    if (this.isAllowBannerDismissal() != other.isAllowBannerDismissal()) return false;
    final java.lang.Object this$bannerText = this.getBannerText();
    final java.lang.Object other$bannerText = other.getBannerText();
    if (this$bannerText == null ? other$bannerText != null : !this$bannerText.equals(other$bannerText)) return false;
    final java.lang.Object this$bannerColor = this.getBannerColor();
    final java.lang.Object other$bannerColor = other.getBannerColor();
    if (this$bannerColor == null ? other$bannerColor != null : !this$bannerColor.equals(other$bannerColor)) return false;
    final java.lang.Object this$bannerTextColor = this.getBannerTextColor();
    final java.lang.Object other$bannerTextColor = other.getBannerTextColor();
    if (this$bannerTextColor == null ? other$bannerTextColor != null : !this$bannerTextColor.equals(other$bannerTextColor)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof AnnouncementSettings;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + (this.isEnableBanner() ? 79 : 97);
    result = result * PRIME + (this.isAllowBannerDismissal() ? 79 : 97);
    final java.lang.Object $bannerText = this.getBannerText();
    result = result * PRIME + ($bannerText == null ? 43 : $bannerText.hashCode());
    final java.lang.Object $bannerColor = this.getBannerColor();
    result = result * PRIME + ($bannerColor == null ? 43 : $bannerColor.hashCode());
    final java.lang.Object $bannerTextColor = this.getBannerTextColor();
    result = result * PRIME + ($bannerTextColor == null ? 43 : $bannerTextColor.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "AnnouncementSettings(enableBanner=" + this.isEnableBanner() + ", bannerText=" + this.getBannerText() + ", bannerColor=" + this.getBannerColor() + ", bannerTextColor=" + this.getBannerTextColor() + ", allowBannerDismissal=" + this.isAllowBannerDismissal() + ")";
  }
}
