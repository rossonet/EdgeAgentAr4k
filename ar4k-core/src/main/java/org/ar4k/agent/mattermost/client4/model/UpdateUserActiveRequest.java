// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2017-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.client4.model;

/**
 * Update user active request payload.
 * 
 * @see org.ar4k.agent.mattermost.client4.api.UserApi#updateUserActive(String, boolean)
 * @author Takayuki Maruyama
 */
public final class UpdateUserActiveRequest {
  private final boolean active;

  @java.lang.SuppressWarnings("all")
  UpdateUserActiveRequest(final boolean active) {
    this.active = active;
  }


  @java.lang.SuppressWarnings("all")
  public static class UpdateUserActiveRequestBuilder {
    @java.lang.SuppressWarnings("all")
    private boolean active;

    @java.lang.SuppressWarnings("all")
    UpdateUserActiveRequestBuilder() {
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public UpdateUserActiveRequest.UpdateUserActiveRequestBuilder active(final boolean active) {
      this.active = active;
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public UpdateUserActiveRequest build() {
      return new UpdateUserActiveRequest(this.active);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
      return "UpdateUserActiveRequest.UpdateUserActiveRequestBuilder(active=" + this.active + ")";
    }
  }

  @java.lang.SuppressWarnings("all")
  public static UpdateUserActiveRequest.UpdateUserActiveRequestBuilder builder() {
    return new UpdateUserActiveRequest.UpdateUserActiveRequestBuilder();
  }

  @java.lang.SuppressWarnings("all")
  public boolean isActive() {
    return this.active;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof UpdateUserActiveRequest)) return false;
    final UpdateUserActiveRequest other = (UpdateUserActiveRequest) o;
    if (this.isActive() != other.isActive()) return false;
    return true;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + (this.isActive() ? 79 : 97);
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "UpdateUserActiveRequest(active=" + this.isActive() + ")";
  }
}
