// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2018 Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model.config;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.ar4k.agent.mattermost.model.config.plugin.PluginState;

/**
 * Plugin settings.
 * 
 * @author Takayuki Maruyama
 */
public class PluginSettings {
  private boolean enable = true;
  private boolean enableUploads;
  private Map<String, Map<String, String>> plugins;
  private Map<String, PluginState> pluginStates;
  /* @since Mattermost Server 4.5 */
  private String clientDirectory;
  /* @since Mattermost Server 5.14 */
  private boolean allowInsecureDownloadUrl;
  /* @since Mattermost Server 5.14 */
  private boolean enableHealthCheck = true;
  private String directory;
  /* @since Mattermost Server 5.16 */
  private boolean enableMarketplace = true;
  /* @since Mattermost Server 5.16 */
  private String marketplaceUrl = "https://marketplace.integrations.mattermost.com";
  /* @since Mattermost Server 5.18 */
  private boolean requirePluginSignature;
  /* @since Mattermost Server 5.18 */
  private List<String> signaturePublicKeyFiles = new ArrayList<>();
  /* @since Mattermost Server 5.20 */
  private boolean enableRemoteMarketplace = true;
  /* @since Mattermost Server 5.20 */
  private boolean automaticPrepackagedPlugins = true;

  @java.lang.SuppressWarnings("all")
  public PluginSettings() {
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnable() {
    return this.enable;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableUploads() {
    return this.enableUploads;
  }

  @java.lang.SuppressWarnings("all")
  public Map<String, Map<String, String>> getPlugins() {
    return this.plugins;
  }

  @java.lang.SuppressWarnings("all")
  public Map<String, PluginState> getPluginStates() {
    return this.pluginStates;
  }

  @java.lang.SuppressWarnings("all")
  public String getClientDirectory() {
    return this.clientDirectory;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isAllowInsecureDownloadUrl() {
    return this.allowInsecureDownloadUrl;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableHealthCheck() {
    return this.enableHealthCheck;
  }

  @java.lang.SuppressWarnings("all")
  public String getDirectory() {
    return this.directory;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableMarketplace() {
    return this.enableMarketplace;
  }

  @java.lang.SuppressWarnings("all")
  public String getMarketplaceUrl() {
    return this.marketplaceUrl;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isRequirePluginSignature() {
    return this.requirePluginSignature;
  }

  @java.lang.SuppressWarnings("all")
  public List<String> getSignaturePublicKeyFiles() {
    return this.signaturePublicKeyFiles;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableRemoteMarketplace() {
    return this.enableRemoteMarketplace;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isAutomaticPrepackagedPlugins() {
    return this.automaticPrepackagedPlugins;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnable(final boolean enable) {
    this.enable = enable;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableUploads(final boolean enableUploads) {
    this.enableUploads = enableUploads;
  }

  @java.lang.SuppressWarnings("all")
  public void setPlugins(final Map<String, Map<String, String>> plugins) {
    this.plugins = plugins;
  }

  @java.lang.SuppressWarnings("all")
  public void setPluginStates(final Map<String, PluginState> pluginStates) {
    this.pluginStates = pluginStates;
  }

  @java.lang.SuppressWarnings("all")
  public void setClientDirectory(final String clientDirectory) {
    this.clientDirectory = clientDirectory;
  }

  @java.lang.SuppressWarnings("all")
  public void setAllowInsecureDownloadUrl(final boolean allowInsecureDownloadUrl) {
    this.allowInsecureDownloadUrl = allowInsecureDownloadUrl;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableHealthCheck(final boolean enableHealthCheck) {
    this.enableHealthCheck = enableHealthCheck;
  }

  @java.lang.SuppressWarnings("all")
  public void setDirectory(final String directory) {
    this.directory = directory;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableMarketplace(final boolean enableMarketplace) {
    this.enableMarketplace = enableMarketplace;
  }

  @java.lang.SuppressWarnings("all")
  public void setMarketplaceUrl(final String marketplaceUrl) {
    this.marketplaceUrl = marketplaceUrl;
  }

  @java.lang.SuppressWarnings("all")
  public void setRequirePluginSignature(final boolean requirePluginSignature) {
    this.requirePluginSignature = requirePluginSignature;
  }

  @java.lang.SuppressWarnings("all")
  public void setSignaturePublicKeyFiles(final List<String> signaturePublicKeyFiles) {
    this.signaturePublicKeyFiles = signaturePublicKeyFiles;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableRemoteMarketplace(final boolean enableRemoteMarketplace) {
    this.enableRemoteMarketplace = enableRemoteMarketplace;
  }

  @java.lang.SuppressWarnings("all")
  public void setAutomaticPrepackagedPlugins(final boolean automaticPrepackagedPlugins) {
    this.automaticPrepackagedPlugins = automaticPrepackagedPlugins;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof PluginSettings)) return false;
    final PluginSettings other = (PluginSettings) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    if (this.isEnable() != other.isEnable()) return false;
    if (this.isEnableUploads() != other.isEnableUploads()) return false;
    if (this.isAllowInsecureDownloadUrl() != other.isAllowInsecureDownloadUrl()) return false;
    if (this.isEnableHealthCheck() != other.isEnableHealthCheck()) return false;
    if (this.isEnableMarketplace() != other.isEnableMarketplace()) return false;
    if (this.isRequirePluginSignature() != other.isRequirePluginSignature()) return false;
    if (this.isEnableRemoteMarketplace() != other.isEnableRemoteMarketplace()) return false;
    if (this.isAutomaticPrepackagedPlugins() != other.isAutomaticPrepackagedPlugins()) return false;
    final java.lang.Object this$plugins = this.getPlugins();
    final java.lang.Object other$plugins = other.getPlugins();
    if (this$plugins == null ? other$plugins != null : !this$plugins.equals(other$plugins)) return false;
    final java.lang.Object this$pluginStates = this.getPluginStates();
    final java.lang.Object other$pluginStates = other.getPluginStates();
    if (this$pluginStates == null ? other$pluginStates != null : !this$pluginStates.equals(other$pluginStates)) return false;
    final java.lang.Object this$clientDirectory = this.getClientDirectory();
    final java.lang.Object other$clientDirectory = other.getClientDirectory();
    if (this$clientDirectory == null ? other$clientDirectory != null : !this$clientDirectory.equals(other$clientDirectory)) return false;
    final java.lang.Object this$directory = this.getDirectory();
    final java.lang.Object other$directory = other.getDirectory();
    if (this$directory == null ? other$directory != null : !this$directory.equals(other$directory)) return false;
    final java.lang.Object this$marketplaceUrl = this.getMarketplaceUrl();
    final java.lang.Object other$marketplaceUrl = other.getMarketplaceUrl();
    if (this$marketplaceUrl == null ? other$marketplaceUrl != null : !this$marketplaceUrl.equals(other$marketplaceUrl)) return false;
    final java.lang.Object this$signaturePublicKeyFiles = this.getSignaturePublicKeyFiles();
    final java.lang.Object other$signaturePublicKeyFiles = other.getSignaturePublicKeyFiles();
    if (this$signaturePublicKeyFiles == null ? other$signaturePublicKeyFiles != null : !this$signaturePublicKeyFiles.equals(other$signaturePublicKeyFiles)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof PluginSettings;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + (this.isEnable() ? 79 : 97);
    result = result * PRIME + (this.isEnableUploads() ? 79 : 97);
    result = result * PRIME + (this.isAllowInsecureDownloadUrl() ? 79 : 97);
    result = result * PRIME + (this.isEnableHealthCheck() ? 79 : 97);
    result = result * PRIME + (this.isEnableMarketplace() ? 79 : 97);
    result = result * PRIME + (this.isRequirePluginSignature() ? 79 : 97);
    result = result * PRIME + (this.isEnableRemoteMarketplace() ? 79 : 97);
    result = result * PRIME + (this.isAutomaticPrepackagedPlugins() ? 79 : 97);
    final java.lang.Object $plugins = this.getPlugins();
    result = result * PRIME + ($plugins == null ? 43 : $plugins.hashCode());
    final java.lang.Object $pluginStates = this.getPluginStates();
    result = result * PRIME + ($pluginStates == null ? 43 : $pluginStates.hashCode());
    final java.lang.Object $clientDirectory = this.getClientDirectory();
    result = result * PRIME + ($clientDirectory == null ? 43 : $clientDirectory.hashCode());
    final java.lang.Object $directory = this.getDirectory();
    result = result * PRIME + ($directory == null ? 43 : $directory.hashCode());
    final java.lang.Object $marketplaceUrl = this.getMarketplaceUrl();
    result = result * PRIME + ($marketplaceUrl == null ? 43 : $marketplaceUrl.hashCode());
    final java.lang.Object $signaturePublicKeyFiles = this.getSignaturePublicKeyFiles();
    result = result * PRIME + ($signaturePublicKeyFiles == null ? 43 : $signaturePublicKeyFiles.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "PluginSettings(enable=" + this.isEnable() + ", enableUploads=" + this.isEnableUploads() + ", plugins=" + this.getPlugins() + ", pluginStates=" + this.getPluginStates() + ", clientDirectory=" + this.getClientDirectory() + ", allowInsecureDownloadUrl=" + this.isAllowInsecureDownloadUrl() + ", enableHealthCheck=" + this.isEnableHealthCheck() + ", directory=" + this.getDirectory() + ", enableMarketplace=" + this.isEnableMarketplace() + ", marketplaceUrl=" + this.getMarketplaceUrl() + ", requirePluginSignature=" + this.isRequirePluginSignature() + ", signaturePublicKeyFiles=" + this.getSignaturePublicKeyFiles() + ", enableRemoteMarketplace=" + this.isEnableRemoteMarketplace() + ", automaticPrepackagedPlugins=" + this.isAutomaticPrepackagedPlugins() + ")";
  }
}
