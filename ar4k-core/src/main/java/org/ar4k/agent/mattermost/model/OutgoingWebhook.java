// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2016-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

public class OutgoingWebhook {
	@JsonProperty("id")
	private String id;
	@JsonProperty("token")
	private String token;
	@JsonProperty("create_at")
	private long createAt;
	@JsonProperty("update_at")
	private long updateAt;
	@JsonProperty("delete_at")
	private long deleteAt;
	@JsonProperty("creator_id")
	private String creatorId;
	@JsonProperty("channel_id")
	private String channelId;
	@JsonProperty("team_id")
	private String teamId;
	@JsonProperty("trigger_words")
	private List<String> triggerWords;
	@JsonProperty("trigger_when")
	private TriggerWhen triggerWhen;
	@JsonProperty("callback_urls")
	private List<String> callbackUrls;
	@JsonProperty("display_name")
	private String displayName;
	@JsonProperty("description")
	private String description;
	@JsonProperty("content_type")
	private ContentType contentType;
	/* @since Mattermost Server what ver? */
	private String username;
	/* @since Mattermost Server what ver? */
	private String iconUrl;

	@java.lang.SuppressWarnings("all")
	public OutgoingWebhook() {
	}

	@java.lang.SuppressWarnings("all")
	public String getId() {
		return this.id;
	}

	@java.lang.SuppressWarnings("all")
	public String getToken() {
		return this.token;
	}

	@java.lang.SuppressWarnings("all")
	public long getCreateAt() {
		return this.createAt;
	}

	@java.lang.SuppressWarnings("all")
	public long getUpdateAt() {
		return this.updateAt;
	}

	@java.lang.SuppressWarnings("all")
	public long getDeleteAt() {
		return this.deleteAt;
	}

	@java.lang.SuppressWarnings("all")
	public String getCreatorId() {
		return this.creatorId;
	}

	@java.lang.SuppressWarnings("all")
	public String getChannelId() {
		return this.channelId;
	}

	@java.lang.SuppressWarnings("all")
	public String getTeamId() {
		return this.teamId;
	}

	@java.lang.SuppressWarnings("all")
	public List<String> getTriggerWords() {
		return this.triggerWords;
	}

	@java.lang.SuppressWarnings("all")
	public TriggerWhen getTriggerWhen() {
		return this.triggerWhen;
	}

	@java.lang.SuppressWarnings("all")
	public List<String> getCallbackUrls() {
		return this.callbackUrls;
	}

	@java.lang.SuppressWarnings("all")
	public String getDisplayName() {
		return this.displayName;
	}

	@java.lang.SuppressWarnings("all")
	public String getDescription() {
		return this.description;
	}

	@java.lang.SuppressWarnings("all")
	public ContentType getContentType() {
		return this.contentType;
	}

	@java.lang.SuppressWarnings("all")
	public String getUsername() {
		return this.username;
	}

	@java.lang.SuppressWarnings("all")
	public String getIconUrl() {
		return this.iconUrl;
	}

	@JsonProperty("id")
	@java.lang.SuppressWarnings("all")
	public void setId(final String id) {
		this.id = id;
	}

	@JsonProperty("token")
	@java.lang.SuppressWarnings("all")
	public void setToken(final String token) {
		this.token = token;
	}

	@JsonProperty("create_at")
	@java.lang.SuppressWarnings("all")
	public void setCreateAt(final long createAt) {
		this.createAt = createAt;
	}

	@JsonProperty("update_at")
	@java.lang.SuppressWarnings("all")
	public void setUpdateAt(final long updateAt) {
		this.updateAt = updateAt;
	}

	@JsonProperty("delete_at")
	@java.lang.SuppressWarnings("all")
	public void setDeleteAt(final long deleteAt) {
		this.deleteAt = deleteAt;
	}

	@JsonProperty("creator_id")
	@java.lang.SuppressWarnings("all")
	public void setCreatorId(final String creatorId) {
		this.creatorId = creatorId;
	}

	@JsonProperty("channel_id")
	@java.lang.SuppressWarnings("all")
	public void setChannelId(final String channelId) {
		this.channelId = channelId;
	}

	@JsonProperty("team_id")
	@java.lang.SuppressWarnings("all")
	public void setTeamId(final String teamId) {
		this.teamId = teamId;
	}

	@JsonProperty("trigger_words")
	@java.lang.SuppressWarnings("all")
	public void setTriggerWords(final List<String> triggerWords) {
		this.triggerWords = triggerWords;
	}

	@JsonProperty("trigger_when")
	@java.lang.SuppressWarnings("all")
	public void setTriggerWhen(final TriggerWhen triggerWhen) {
		this.triggerWhen = triggerWhen;
	}

	@JsonProperty("callback_urls")
	@java.lang.SuppressWarnings("all")
	public void setCallbackUrls(final List<String> callbackUrls) {
		this.callbackUrls = callbackUrls;
	}

	@JsonProperty("display_name")
	@java.lang.SuppressWarnings("all")
	public void setDisplayName(final String displayName) {
		this.displayName = displayName;
	}

	@JsonProperty("description")
	@java.lang.SuppressWarnings("all")
	public void setDescription(final String description) {
		this.description = description;
	}

	@JsonProperty("content_type")
	@java.lang.SuppressWarnings("all")
	public void setContentType(final ContentType contentType) {
		this.contentType = contentType;
	}

	@java.lang.SuppressWarnings("all")
	public void setUsername(final String username) {
		this.username = username;
	}

	@java.lang.SuppressWarnings("all")
	public void setIconUrl(final String iconUrl) {
		this.iconUrl = iconUrl;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this)
			return true;
		if (!(o instanceof OutgoingWebhook))
			return false;
		final OutgoingWebhook other = (OutgoingWebhook) o;
		if (!other.canEqual((java.lang.Object) this))
			return false;
		if (this.getCreateAt() != other.getCreateAt())
			return false;
		if (this.getUpdateAt() != other.getUpdateAt())
			return false;
		if (this.getDeleteAt() != other.getDeleteAt())
			return false;
		final java.lang.Object this$id = this.getId();
		final java.lang.Object other$id = other.getId();
		if (this$id == null ? other$id != null : !this$id.equals(other$id))
			return false;
		final java.lang.Object this$token = this.getToken();
		final java.lang.Object other$token = other.getToken();
		if (this$token == null ? other$token != null : !this$token.equals(other$token))
			return false;
		final java.lang.Object this$creatorId = this.getCreatorId();
		final java.lang.Object other$creatorId = other.getCreatorId();
		if (this$creatorId == null ? other$creatorId != null : !this$creatorId.equals(other$creatorId))
			return false;
		final java.lang.Object this$channelId = this.getChannelId();
		final java.lang.Object other$channelId = other.getChannelId();
		if (this$channelId == null ? other$channelId != null : !this$channelId.equals(other$channelId))
			return false;
		final java.lang.Object this$teamId = this.getTeamId();
		final java.lang.Object other$teamId = other.getTeamId();
		if (this$teamId == null ? other$teamId != null : !this$teamId.equals(other$teamId))
			return false;
		final java.lang.Object this$triggerWords = this.getTriggerWords();
		final java.lang.Object other$triggerWords = other.getTriggerWords();
		if (this$triggerWords == null ? other$triggerWords != null : !this$triggerWords.equals(other$triggerWords))
			return false;
		final java.lang.Object this$triggerWhen = this.getTriggerWhen();
		final java.lang.Object other$triggerWhen = other.getTriggerWhen();
		if (this$triggerWhen == null ? other$triggerWhen != null : !this$triggerWhen.equals(other$triggerWhen))
			return false;
		final java.lang.Object this$callbackUrls = this.getCallbackUrls();
		final java.lang.Object other$callbackUrls = other.getCallbackUrls();
		if (this$callbackUrls == null ? other$callbackUrls != null : !this$callbackUrls.equals(other$callbackUrls))
			return false;
		final java.lang.Object this$displayName = this.getDisplayName();
		final java.lang.Object other$displayName = other.getDisplayName();
		if (this$displayName == null ? other$displayName != null : !this$displayName.equals(other$displayName))
			return false;
		final java.lang.Object this$description = this.getDescription();
		final java.lang.Object other$description = other.getDescription();
		if (this$description == null ? other$description != null : !this$description.equals(other$description))
			return false;
		final java.lang.Object this$contentType = this.getContentType();
		final java.lang.Object other$contentType = other.getContentType();
		if (this$contentType == null ? other$contentType != null : !this$contentType.equals(other$contentType))
			return false;
		final java.lang.Object this$username = this.getUsername();
		final java.lang.Object other$username = other.getUsername();
		if (this$username == null ? other$username != null : !this$username.equals(other$username))
			return false;
		final java.lang.Object this$iconUrl = this.getIconUrl();
		final java.lang.Object other$iconUrl = other.getIconUrl();
		if (this$iconUrl == null ? other$iconUrl != null : !this$iconUrl.equals(other$iconUrl))
			return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof OutgoingWebhook;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final long $createAt = this.getCreateAt();
		result = result * PRIME + (int) ($createAt >>> 32 ^ $createAt);
		final long $updateAt = this.getUpdateAt();
		result = result * PRIME + (int) ($updateAt >>> 32 ^ $updateAt);
		final long $deleteAt = this.getDeleteAt();
		result = result * PRIME + (int) ($deleteAt >>> 32 ^ $deleteAt);
		final java.lang.Object $id = this.getId();
		result = result * PRIME + ($id == null ? 43 : $id.hashCode());
		final java.lang.Object $token = this.getToken();
		result = result * PRIME + ($token == null ? 43 : $token.hashCode());
		final java.lang.Object $creatorId = this.getCreatorId();
		result = result * PRIME + ($creatorId == null ? 43 : $creatorId.hashCode());
		final java.lang.Object $channelId = this.getChannelId();
		result = result * PRIME + ($channelId == null ? 43 : $channelId.hashCode());
		final java.lang.Object $teamId = this.getTeamId();
		result = result * PRIME + ($teamId == null ? 43 : $teamId.hashCode());
		final java.lang.Object $triggerWords = this.getTriggerWords();
		result = result * PRIME + ($triggerWords == null ? 43 : $triggerWords.hashCode());
		final java.lang.Object $triggerWhen = this.getTriggerWhen();
		result = result * PRIME + ($triggerWhen == null ? 43 : $triggerWhen.hashCode());
		final java.lang.Object $callbackUrls = this.getCallbackUrls();
		result = result * PRIME + ($callbackUrls == null ? 43 : $callbackUrls.hashCode());
		final java.lang.Object $displayName = this.getDisplayName();
		result = result * PRIME + ($displayName == null ? 43 : $displayName.hashCode());
		final java.lang.Object $description = this.getDescription();
		result = result * PRIME + ($description == null ? 43 : $description.hashCode());
		final java.lang.Object $contentType = this.getContentType();
		result = result * PRIME + ($contentType == null ? 43 : $contentType.hashCode());
		final java.lang.Object $username = this.getUsername();
		result = result * PRIME + ($username == null ? 43 : $username.hashCode());
		final java.lang.Object $iconUrl = this.getIconUrl();
		result = result * PRIME + ($iconUrl == null ? 43 : $iconUrl.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "OutgoingWebhook(id=" + this.getId() + ", token=" + this.getToken() + ", createAt=" + this.getCreateAt()
				+ ", updateAt=" + this.getUpdateAt() + ", deleteAt=" + this.getDeleteAt() + ", creatorId="
				+ this.getCreatorId() + ", channelId=" + this.getChannelId() + ", teamId=" + this.getTeamId()
				+ ", triggerWords=" + this.getTriggerWords() + ", triggerWhen=" + this.getTriggerWhen()
				+ ", callbackUrls=" + this.getCallbackUrls() + ", displayName=" + this.getDisplayName()
				+ ", description=" + this.getDescription() + ", contentType=" + this.getContentType() + ", username="
				+ this.getUsername() + ", iconUrl=" + this.getIconUrl() + ")";
	}
}
