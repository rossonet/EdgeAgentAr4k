// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2017-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model;

import com.fasterxml.jackson.annotation.JsonProperty;

public class Reaction {
	@JsonProperty("user_id")
	private String userId;
	@JsonProperty("post_id")
	private String postId;
	@JsonProperty("emoji_name")
	private String emojiName;
	@JsonProperty("create_at")
	private long createAt;

	@java.lang.SuppressWarnings("all")
	public Reaction() {
	}

	@java.lang.SuppressWarnings("all")
	public String getUserId() {
		return this.userId;
	}

	@java.lang.SuppressWarnings("all")
	public String getPostId() {
		return this.postId;
	}

	@java.lang.SuppressWarnings("all")
	public String getEmojiName() {
		return this.emojiName;
	}

	@java.lang.SuppressWarnings("all")
	public long getCreateAt() {
		return this.createAt;
	}

	@JsonProperty("user_id")
	@java.lang.SuppressWarnings("all")
	public void setUserId(final String userId) {
		this.userId = userId;
	}

	@JsonProperty("post_id")
	@java.lang.SuppressWarnings("all")
	public void setPostId(final String postId) {
		this.postId = postId;
	}

	@JsonProperty("emoji_name")
	@java.lang.SuppressWarnings("all")
	public void setEmojiName(final String emojiName) {
		this.emojiName = emojiName;
	}

	@JsonProperty("create_at")
	@java.lang.SuppressWarnings("all")
	public void setCreateAt(final long createAt) {
		this.createAt = createAt;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this)
			return true;
		if (!(o instanceof Reaction))
			return false;
		final Reaction other = (Reaction) o;
		if (!other.canEqual((java.lang.Object) this))
			return false;
		if (this.getCreateAt() != other.getCreateAt())
			return false;
		final java.lang.Object this$userId = this.getUserId();
		final java.lang.Object other$userId = other.getUserId();
		if (this$userId == null ? other$userId != null : !this$userId.equals(other$userId))
			return false;
		final java.lang.Object this$postId = this.getPostId();
		final java.lang.Object other$postId = other.getPostId();
		if (this$postId == null ? other$postId != null : !this$postId.equals(other$postId))
			return false;
		final java.lang.Object this$emojiName = this.getEmojiName();
		final java.lang.Object other$emojiName = other.getEmojiName();
		if (this$emojiName == null ? other$emojiName != null : !this$emojiName.equals(other$emojiName))
			return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof Reaction;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final long $createAt = this.getCreateAt();
		result = result * PRIME + (int) ($createAt >>> 32 ^ $createAt);
		final java.lang.Object $userId = this.getUserId();
		result = result * PRIME + ($userId == null ? 43 : $userId.hashCode());
		final java.lang.Object $postId = this.getPostId();
		result = result * PRIME + ($postId == null ? 43 : $postId.hashCode());
		final java.lang.Object $emojiName = this.getEmojiName();
		result = result * PRIME + ($emojiName == null ? 43 : $emojiName.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "Reaction(userId=" + this.getUserId() + ", postId=" + this.getPostId() + ", emojiName="
				+ this.getEmojiName() + ", createAt=" + this.getCreateAt() + ")";
	}
}
