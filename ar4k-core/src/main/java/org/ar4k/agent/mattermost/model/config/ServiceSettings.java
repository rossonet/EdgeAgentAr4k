// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2016-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model.config;

import java.util.List;

import org.ar4k.agent.mattermost.model.config.consts.AllowEditPost;
import org.ar4k.agent.mattermost.model.config.consts.ChannelSidebarOrganization;
import org.ar4k.agent.mattermost.model.config.consts.ConnectionSecurity;
import org.ar4k.agent.mattermost.model.config.consts.GroupUnreadChannels;
import org.ar4k.agent.mattermost.model.config.consts.ImageProxyType;
import org.ar4k.agent.mattermost.model.config.consts.PermissionsDeletePost;
import org.ar4k.agent.mattermost.model.config.consts.RestrictEmojiCreation;
import org.ar4k.agent.mattermost.model.config.consts.WebServerMode;

/**
 * Service settings.
 * 
 * @author Takayuki Maruyama
 */
public class ServiceSettings {
  private String siteUrl;
  private String licenseFileLocation;
  private String listenAddress;
  private ConnectionSecurity connectionSecurity;
  private String tlsCertFile;
  private String tlsKeyFile;
  private boolean useLetsEncrypt;
  private String letsEncryptCertificateCacheFile;
  private boolean forward80To443;
  private int readTimeout;
  private int writeTimeout;
  private int maximumLoginAttempts;
  private String googleDeveloperKey;
  private boolean enableOAuthServiceProvider;
  private boolean enableIncomingWebhooks;
  private boolean enableOutgoingWebhooks;
  private boolean enableCommands;
  private boolean enableOnlyAdminIntegrations;
  private boolean enablePostUsernameOverride;
  private boolean enablePostIconOverride;
  private boolean enableLinkPreviews;
  private boolean enableTesting;
  private boolean enableDeveloper;
  private boolean enableSecurityFixAlert;
  private boolean enableInsecureOutgoingConnections;
  private boolean enableMultifactorAuthentication;
  private boolean enforceMultifactorAuthentication;
  private String allowCorsFrom;
  private int sessionLengthWebInDays;
  private int sessionLengthMobileInDays;
  private int sessionLengthSsoInDays;
  private int sessionCacheInMinutes;
  private int websocketSecurePort;
  private int websocketPort;
  private WebServerMode webServerMode;
  private boolean enableCustomEmoji;
  private RestrictEmojiCreation restrictCustomEmojiCreation;
  private PermissionsDeletePost restrictPostDelete; // XXX really?
  private AllowEditPost allowEditPost;
  private int postEditTimeLimit;
  private long timeBetweenUserTypingUpdatesMilliseconds;
  private boolean enablePostSearch;
  private boolean enableUserTypingMessages;
  private boolean enableUserStatuses;
  private int clusterLogTimeoutMilliseconds;
  /* @since Mattermost Server 3.10 */
  private int goroutineHealthThreshold;
  /* @since Mattermost Server 4.0 */
  private boolean enableEmojiPicker;
  /* @since Mattermost Server 4.0 */
  private boolean enableChannelViewedMessages;
  /* @since Mattermost Server 4.0, change default to false in 4.8 */
  private boolean enableApiv3 = false;
  /* @since Mattermost Server 4.1 */
  private boolean enableUserAccessTokens;
  /* @since Mattermost Server 4.2 */
  private String allowedUntrustedInternalConnections;
  /* @since Mattermost Server 4.3 (Enterprise Edition) */
  private int sessionIdleTimeoutInMinutes;
  /* @since Mattermost Server 4.4 */
  private boolean closeUnusedDirectMessages;
  /* @since Mattermost Server 4.5 */
  private boolean enablePreviewFeatures = true;
  /* @since Mattermost Server 4.5 */
  private boolean experimentalEnableAuthenticationTransfer = true;
  /* @since Mattermost Server 4.6 */
  private boolean enableTutorial = true;
  /* @since Mattermost Server 4.7 */
  private ImageProxyType imageProxyType;
  /* @since Mattermost Server 5.10 */
  private int minimumHashtagLength = 3;
  /* @since Mattermost Server 5.10 */
  private boolean disableBotsWhenOwnerIsDeactivated = true;

  /**
   * Set the image proxy type.
   * 
   * @deprecated Changed to {@link ImageProxySettings#setImageProxyType(ImageProxyType)} for
   *             Mattermost Server 5.8+
   * @since Mattermost Server 4.7
   */
  @Deprecated
  public void setImageProxyType(ImageProxyType imageProxyType) {
    this.imageProxyType = imageProxyType;
  }

  /**
   * Get the image proxy type.
   * 
   * @deprecated Changed to {@link ImageProxySettings#getImageProxyType()} for Mattermost Server
   *             5.8+
   * @since Mattermost Server 4.7
   */
  @Deprecated
  public ImageProxyType getImageProxyType() {
    return imageProxyType;
  }

  /* @since Mattermost Server 4.7 */
  private String imageProxyOptions;

  /**
   * Set the image proxy options.
   * 
   * @deprecated Changed to {@link ImageProxySettings#setRemoteImageProxyOptions(String)} for
   *             Mattermost Server 5.8+
   * @since Mattermost Server 4.7
   */
  @Deprecated
  public void setImageProxyOptions(String imageProxyOptions) {
    this.imageProxyOptions = imageProxyOptions;
  }

  /**
   * Get the image proxy options.
   * 
   * @deprecated Changed to {@link ImageProxySettings#getRemoteImageProxyOptions()} for Mattermost
   *             Server 5.8+
   * @since Mattermost Server 4.7
   */
  @Deprecated
  public String getImageProxyOptions() {
    return imageProxyOptions;
  }

  /* @since Mattermost Server 4.7 */
  private String imageProxyUrl;

  /**
   * Set the image proxy url.
   * 
   * @deprecated Changed to {@link ImageProxySettings#setRemoteImageProxyUrl(String)} for Mattermost
   *             Server 5.8+
   * @since Mattermost Server 4.7
   */
  @Deprecated
  public void setImageProxyUrl(String imageProxyUrl) {
    this.imageProxyUrl = imageProxyUrl;
  }

  /**
   * Get the image proxy url.
   * 
   * @deprecated Changed to {@link ImageProxySettings#getRemoteImageProxyUrl()} for Mattermost
   *             Server 5.8+
   * @since Mattermost Server 4.7
   */
  @Deprecated
  public String getImageProxyUrl() {
    return imageProxyUrl;
  }

  /* @since Mattermost Server 4.7 */
  private GroupUnreadChannels experimentalGroupUnreadChannels = GroupUnreadChannels.DISABLED;
  /* @since Mattermost Server 4.7 */
  private boolean experimentalEnableDefaultChannelLeaveJoinMessages = true;
  /* @since Mattermost 4.8 */
  private boolean allowCookiesForSubdomains;
  /* @since Mattermost 4.8 */
  private String websocketUrl;
  /* @since Mattermost Server XXX what ver? */
  private boolean enableEmailInvitations;
  /* @since Mattermost Server 5.0 */
  private boolean enableApiTeamDeletion;
  /* @since Mattermost Server 5.0 */
  private boolean experimentalEnableHardenedMode;
  /* @since Mattermost Server 5.1 */
  private boolean enableGifPicker;
  /* @since Mattermpst Server 5.1 */
  private String gfycatApiKey;
  /* @since Mattermost Server 5.1 */
  private String gfycatApiSecret;
  /* @since Mattermost Server 5.1 */
  private boolean experimentalLimitClientConfig;
  /* @since Mattermost Server 5.2 */
  private String corsExposedHeaders;
  /* @since Mattermost Server 5.2 */
  private boolean corsAllowCredentials;
  /* @since Mattermost Server 5.2 */
  private boolean corsDebug;
  /* @since Mattermost Server 5.2 */
  private boolean experimentalChannelOrganization;
  /* @since Mattermost Server 5.6 */
  private String tlsMinVer;
  /* @since Mattermost Server 5.6 */
  private boolean tlsStrictTransport;
  /* @since Mattermost Server 5.6 */
  private long tlsStrictTransportMaxAge;
  /* @since Mattermost Server 5.6 */
  private List<String> tlsOverwriteCiphers;
  /* @since Mattermost Server 5.8, removed in 5.18 */
  private boolean experimentalLdapGroupSync;
  /* @since Mattermost Server 5.8 */
  private boolean experimentalStrictCsrfEnforcement;
  /* @since Mattermost Server 5.9 */
  private boolean disableLegacyMfa;
  /* @since Mattermost Server 5.12 */
  private List<String> trustedProxyIpHeader;
  /* @since Mattermost Server 5.12 */
  private boolean enableBotAccountCreation;
  /* @since Mattermost Server 5.14 */
  private boolean enableSvgs;
  /* @since Mattermost Server 5.17 */
  private boolean enableLatex;
  /* @since Mattermost Server 5.22 */
  private boolean enableOpenTracing;
  /* @since Mattermost Server 5.22 */
  private int idleTimeout = 60;
  /* @since Mattermost Server 5.22 */
  private ChannelSidebarOrganization experimentalChannelSidebarOrganization = ChannelSidebarOrganization.DISABLED;

  /**
   * This method should not use.
   * 
   * @deprecated This is typo. Please use {@link #getGoroutineHealthThreshold()}
   */
  @Deprecated
  public int getGoroutineHealthThreshould() {
    return getGoroutineHealthThreshold();
  }

  /**
   * This method should not use.
   * 
   * @deprecated This is typo. Please use {@link #setGoroutineHealthThreshold(int)}
   */
  @Deprecated
  public void setGoroutineHealthThreshould(int goroutineHealthThresould) {
    setGoroutineHealthThreshold(goroutineHealthThresould);
  }

  /**
   * This method should not use.
   * 
   * @deprecated This is typo. Please use {@link #isEnableUserAccessTokens()}
   */
  @Deprecated
  public boolean isEnableUserAccessToken() {
    return isEnableUserAccessTokens();
  }

  /**
   * This method should not use.
   * 
   * @deprecated This is typo. Please use {@link #setEnableUserAccessToken(boolean)}
   */
  @Deprecated
  public void setEnableUserAccessToken(boolean enableUserAccessToken) {
    setEnableUserAccessTokens(enableUserAccessToken);
  }

  @java.lang.SuppressWarnings("all")
  public ServiceSettings() {
  }

  @java.lang.SuppressWarnings("all")
  public String getSiteUrl() {
    return this.siteUrl;
  }

  @java.lang.SuppressWarnings("all")
  public String getLicenseFileLocation() {
    return this.licenseFileLocation;
  }

  @java.lang.SuppressWarnings("all")
  public String getListenAddress() {
    return this.listenAddress;
  }

  @java.lang.SuppressWarnings("all")
  public ConnectionSecurity getConnectionSecurity() {
    return this.connectionSecurity;
  }

  @java.lang.SuppressWarnings("all")
  public String getTlsCertFile() {
    return this.tlsCertFile;
  }

  @java.lang.SuppressWarnings("all")
  public String getTlsKeyFile() {
    return this.tlsKeyFile;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isUseLetsEncrypt() {
    return this.useLetsEncrypt;
  }

  @java.lang.SuppressWarnings("all")
  public String getLetsEncryptCertificateCacheFile() {
    return this.letsEncryptCertificateCacheFile;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isForward80To443() {
    return this.forward80To443;
  }

  @java.lang.SuppressWarnings("all")
  public int getReadTimeout() {
    return this.readTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public int getWriteTimeout() {
    return this.writeTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public int getMaximumLoginAttempts() {
    return this.maximumLoginAttempts;
  }

  @java.lang.SuppressWarnings("all")
  public String getGoogleDeveloperKey() {
    return this.googleDeveloperKey;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableOAuthServiceProvider() {
    return this.enableOAuthServiceProvider;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableIncomingWebhooks() {
    return this.enableIncomingWebhooks;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableOutgoingWebhooks() {
    return this.enableOutgoingWebhooks;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableCommands() {
    return this.enableCommands;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableOnlyAdminIntegrations() {
    return this.enableOnlyAdminIntegrations;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnablePostUsernameOverride() {
    return this.enablePostUsernameOverride;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnablePostIconOverride() {
    return this.enablePostIconOverride;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableLinkPreviews() {
    return this.enableLinkPreviews;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableTesting() {
    return this.enableTesting;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableDeveloper() {
    return this.enableDeveloper;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableSecurityFixAlert() {
    return this.enableSecurityFixAlert;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableInsecureOutgoingConnections() {
    return this.enableInsecureOutgoingConnections;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableMultifactorAuthentication() {
    return this.enableMultifactorAuthentication;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnforceMultifactorAuthentication() {
    return this.enforceMultifactorAuthentication;
  }

  @java.lang.SuppressWarnings("all")
  public String getAllowCorsFrom() {
    return this.allowCorsFrom;
  }

  @java.lang.SuppressWarnings("all")
  public int getSessionLengthWebInDays() {
    return this.sessionLengthWebInDays;
  }

  @java.lang.SuppressWarnings("all")
  public int getSessionLengthMobileInDays() {
    return this.sessionLengthMobileInDays;
  }

  @java.lang.SuppressWarnings("all")
  public int getSessionLengthSsoInDays() {
    return this.sessionLengthSsoInDays;
  }

  @java.lang.SuppressWarnings("all")
  public int getSessionCacheInMinutes() {
    return this.sessionCacheInMinutes;
  }

  @java.lang.SuppressWarnings("all")
  public int getWebsocketSecurePort() {
    return this.websocketSecurePort;
  }

  @java.lang.SuppressWarnings("all")
  public int getWebsocketPort() {
    return this.websocketPort;
  }

  @java.lang.SuppressWarnings("all")
  public WebServerMode getWebServerMode() {
    return this.webServerMode;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableCustomEmoji() {
    return this.enableCustomEmoji;
  }

  @java.lang.SuppressWarnings("all")
  public RestrictEmojiCreation getRestrictCustomEmojiCreation() {
    return this.restrictCustomEmojiCreation;
  }

  @java.lang.SuppressWarnings("all")
  public PermissionsDeletePost getRestrictPostDelete() {
    return this.restrictPostDelete;
  }

  @java.lang.SuppressWarnings("all")
  public AllowEditPost getAllowEditPost() {
    return this.allowEditPost;
  }

  @java.lang.SuppressWarnings("all")
  public int getPostEditTimeLimit() {
    return this.postEditTimeLimit;
  }

  @java.lang.SuppressWarnings("all")
  public long getTimeBetweenUserTypingUpdatesMilliseconds() {
    return this.timeBetweenUserTypingUpdatesMilliseconds;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnablePostSearch() {
    return this.enablePostSearch;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableUserTypingMessages() {
    return this.enableUserTypingMessages;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableUserStatuses() {
    return this.enableUserStatuses;
  }

  @java.lang.SuppressWarnings("all")
  public int getClusterLogTimeoutMilliseconds() {
    return this.clusterLogTimeoutMilliseconds;
  }

  @java.lang.SuppressWarnings("all")
  public int getGoroutineHealthThreshold() {
    return this.goroutineHealthThreshold;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableEmojiPicker() {
    return this.enableEmojiPicker;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableChannelViewedMessages() {
    return this.enableChannelViewedMessages;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableApiv3() {
    return this.enableApiv3;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableUserAccessTokens() {
    return this.enableUserAccessTokens;
  }

  @java.lang.SuppressWarnings("all")
  public String getAllowedUntrustedInternalConnections() {
    return this.allowedUntrustedInternalConnections;
  }

  @java.lang.SuppressWarnings("all")
  public int getSessionIdleTimeoutInMinutes() {
    return this.sessionIdleTimeoutInMinutes;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isCloseUnusedDirectMessages() {
    return this.closeUnusedDirectMessages;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnablePreviewFeatures() {
    return this.enablePreviewFeatures;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isExperimentalEnableAuthenticationTransfer() {
    return this.experimentalEnableAuthenticationTransfer;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableTutorial() {
    return this.enableTutorial;
  }

  @java.lang.SuppressWarnings("all")
  public int getMinimumHashtagLength() {
    return this.minimumHashtagLength;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isDisableBotsWhenOwnerIsDeactivated() {
    return this.disableBotsWhenOwnerIsDeactivated;
  }

  @java.lang.SuppressWarnings("all")
  public GroupUnreadChannels getExperimentalGroupUnreadChannels() {
    return this.experimentalGroupUnreadChannels;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isExperimentalEnableDefaultChannelLeaveJoinMessages() {
    return this.experimentalEnableDefaultChannelLeaveJoinMessages;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isAllowCookiesForSubdomains() {
    return this.allowCookiesForSubdomains;
  }

  @java.lang.SuppressWarnings("all")
  public String getWebsocketUrl() {
    return this.websocketUrl;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableEmailInvitations() {
    return this.enableEmailInvitations;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableApiTeamDeletion() {
    return this.enableApiTeamDeletion;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isExperimentalEnableHardenedMode() {
    return this.experimentalEnableHardenedMode;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableGifPicker() {
    return this.enableGifPicker;
  }

  @java.lang.SuppressWarnings("all")
  public String getGfycatApiKey() {
    return this.gfycatApiKey;
  }

  @java.lang.SuppressWarnings("all")
  public String getGfycatApiSecret() {
    return this.gfycatApiSecret;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isExperimentalLimitClientConfig() {
    return this.experimentalLimitClientConfig;
  }

  @java.lang.SuppressWarnings("all")
  public String getCorsExposedHeaders() {
    return this.corsExposedHeaders;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isCorsAllowCredentials() {
    return this.corsAllowCredentials;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isCorsDebug() {
    return this.corsDebug;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isExperimentalChannelOrganization() {
    return this.experimentalChannelOrganization;
  }

  @java.lang.SuppressWarnings("all")
  public String getTlsMinVer() {
    return this.tlsMinVer;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isTlsStrictTransport() {
    return this.tlsStrictTransport;
  }

  @java.lang.SuppressWarnings("all")
  public long getTlsStrictTransportMaxAge() {
    return this.tlsStrictTransportMaxAge;
  }

  @java.lang.SuppressWarnings("all")
  public List<String> getTlsOverwriteCiphers() {
    return this.tlsOverwriteCiphers;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isExperimentalStrictCsrfEnforcement() {
    return this.experimentalStrictCsrfEnforcement;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isDisableLegacyMfa() {
    return this.disableLegacyMfa;
  }

  @java.lang.SuppressWarnings("all")
  public List<String> getTrustedProxyIpHeader() {
    return this.trustedProxyIpHeader;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableBotAccountCreation() {
    return this.enableBotAccountCreation;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableSvgs() {
    return this.enableSvgs;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableLatex() {
    return this.enableLatex;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableOpenTracing() {
    return this.enableOpenTracing;
  }

  @java.lang.SuppressWarnings("all")
  public int getIdleTimeout() {
    return this.idleTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public ChannelSidebarOrganization getExperimentalChannelSidebarOrganization() {
    return this.experimentalChannelSidebarOrganization;
  }

  @java.lang.SuppressWarnings("all")
  public void setSiteUrl(final String siteUrl) {
    this.siteUrl = siteUrl;
  }

  @java.lang.SuppressWarnings("all")
  public void setLicenseFileLocation(final String licenseFileLocation) {
    this.licenseFileLocation = licenseFileLocation;
  }

  @java.lang.SuppressWarnings("all")
  public void setListenAddress(final String listenAddress) {
    this.listenAddress = listenAddress;
  }

  @java.lang.SuppressWarnings("all")
  public void setConnectionSecurity(final ConnectionSecurity connectionSecurity) {
    this.connectionSecurity = connectionSecurity;
  }

  @java.lang.SuppressWarnings("all")
  public void setTlsCertFile(final String tlsCertFile) {
    this.tlsCertFile = tlsCertFile;
  }

  @java.lang.SuppressWarnings("all")
  public void setTlsKeyFile(final String tlsKeyFile) {
    this.tlsKeyFile = tlsKeyFile;
  }

  @java.lang.SuppressWarnings("all")
  public void setUseLetsEncrypt(final boolean useLetsEncrypt) {
    this.useLetsEncrypt = useLetsEncrypt;
  }

  @java.lang.SuppressWarnings("all")
  public void setLetsEncryptCertificateCacheFile(final String letsEncryptCertificateCacheFile) {
    this.letsEncryptCertificateCacheFile = letsEncryptCertificateCacheFile;
  }

  @java.lang.SuppressWarnings("all")
  public void setForward80To443(final boolean forward80To443) {
    this.forward80To443 = forward80To443;
  }

  @java.lang.SuppressWarnings("all")
  public void setReadTimeout(final int readTimeout) {
    this.readTimeout = readTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public void setWriteTimeout(final int writeTimeout) {
    this.writeTimeout = writeTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public void setMaximumLoginAttempts(final int maximumLoginAttempts) {
    this.maximumLoginAttempts = maximumLoginAttempts;
  }

  @java.lang.SuppressWarnings("all")
  public void setGoogleDeveloperKey(final String googleDeveloperKey) {
    this.googleDeveloperKey = googleDeveloperKey;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableOAuthServiceProvider(final boolean enableOAuthServiceProvider) {
    this.enableOAuthServiceProvider = enableOAuthServiceProvider;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableIncomingWebhooks(final boolean enableIncomingWebhooks) {
    this.enableIncomingWebhooks = enableIncomingWebhooks;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableOutgoingWebhooks(final boolean enableOutgoingWebhooks) {
    this.enableOutgoingWebhooks = enableOutgoingWebhooks;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableCommands(final boolean enableCommands) {
    this.enableCommands = enableCommands;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableOnlyAdminIntegrations(final boolean enableOnlyAdminIntegrations) {
    this.enableOnlyAdminIntegrations = enableOnlyAdminIntegrations;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnablePostUsernameOverride(final boolean enablePostUsernameOverride) {
    this.enablePostUsernameOverride = enablePostUsernameOverride;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnablePostIconOverride(final boolean enablePostIconOverride) {
    this.enablePostIconOverride = enablePostIconOverride;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableLinkPreviews(final boolean enableLinkPreviews) {
    this.enableLinkPreviews = enableLinkPreviews;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableTesting(final boolean enableTesting) {
    this.enableTesting = enableTesting;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableDeveloper(final boolean enableDeveloper) {
    this.enableDeveloper = enableDeveloper;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableSecurityFixAlert(final boolean enableSecurityFixAlert) {
    this.enableSecurityFixAlert = enableSecurityFixAlert;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableInsecureOutgoingConnections(final boolean enableInsecureOutgoingConnections) {
    this.enableInsecureOutgoingConnections = enableInsecureOutgoingConnections;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableMultifactorAuthentication(final boolean enableMultifactorAuthentication) {
    this.enableMultifactorAuthentication = enableMultifactorAuthentication;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnforceMultifactorAuthentication(final boolean enforceMultifactorAuthentication) {
    this.enforceMultifactorAuthentication = enforceMultifactorAuthentication;
  }

  @java.lang.SuppressWarnings("all")
  public void setAllowCorsFrom(final String allowCorsFrom) {
    this.allowCorsFrom = allowCorsFrom;
  }

  @java.lang.SuppressWarnings("all")
  public void setSessionLengthWebInDays(final int sessionLengthWebInDays) {
    this.sessionLengthWebInDays = sessionLengthWebInDays;
  }

  @java.lang.SuppressWarnings("all")
  public void setSessionLengthMobileInDays(final int sessionLengthMobileInDays) {
    this.sessionLengthMobileInDays = sessionLengthMobileInDays;
  }

  @java.lang.SuppressWarnings("all")
  public void setSessionLengthSsoInDays(final int sessionLengthSsoInDays) {
    this.sessionLengthSsoInDays = sessionLengthSsoInDays;
  }

  @java.lang.SuppressWarnings("all")
  public void setSessionCacheInMinutes(final int sessionCacheInMinutes) {
    this.sessionCacheInMinutes = sessionCacheInMinutes;
  }

  @java.lang.SuppressWarnings("all")
  public void setWebsocketSecurePort(final int websocketSecurePort) {
    this.websocketSecurePort = websocketSecurePort;
  }

  @java.lang.SuppressWarnings("all")
  public void setWebsocketPort(final int websocketPort) {
    this.websocketPort = websocketPort;
  }

  @java.lang.SuppressWarnings("all")
  public void setWebServerMode(final WebServerMode webServerMode) {
    this.webServerMode = webServerMode;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableCustomEmoji(final boolean enableCustomEmoji) {
    this.enableCustomEmoji = enableCustomEmoji;
  }

  @java.lang.SuppressWarnings("all")
  public void setRestrictCustomEmojiCreation(final RestrictEmojiCreation restrictCustomEmojiCreation) {
    this.restrictCustomEmojiCreation = restrictCustomEmojiCreation;
  }

  @java.lang.SuppressWarnings("all")
  public void setRestrictPostDelete(final PermissionsDeletePost restrictPostDelete) {
    this.restrictPostDelete = restrictPostDelete;
  }

  @java.lang.SuppressWarnings("all")
  public void setAllowEditPost(final AllowEditPost allowEditPost) {
    this.allowEditPost = allowEditPost;
  }

  @java.lang.SuppressWarnings("all")
  public void setPostEditTimeLimit(final int postEditTimeLimit) {
    this.postEditTimeLimit = postEditTimeLimit;
  }

  @java.lang.SuppressWarnings("all")
  public void setTimeBetweenUserTypingUpdatesMilliseconds(final long timeBetweenUserTypingUpdatesMilliseconds) {
    this.timeBetweenUserTypingUpdatesMilliseconds = timeBetweenUserTypingUpdatesMilliseconds;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnablePostSearch(final boolean enablePostSearch) {
    this.enablePostSearch = enablePostSearch;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableUserTypingMessages(final boolean enableUserTypingMessages) {
    this.enableUserTypingMessages = enableUserTypingMessages;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableUserStatuses(final boolean enableUserStatuses) {
    this.enableUserStatuses = enableUserStatuses;
  }

  @java.lang.SuppressWarnings("all")
  public void setClusterLogTimeoutMilliseconds(final int clusterLogTimeoutMilliseconds) {
    this.clusterLogTimeoutMilliseconds = clusterLogTimeoutMilliseconds;
  }

  @java.lang.SuppressWarnings("all")
  public void setGoroutineHealthThreshold(final int goroutineHealthThreshold) {
    this.goroutineHealthThreshold = goroutineHealthThreshold;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableEmojiPicker(final boolean enableEmojiPicker) {
    this.enableEmojiPicker = enableEmojiPicker;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableChannelViewedMessages(final boolean enableChannelViewedMessages) {
    this.enableChannelViewedMessages = enableChannelViewedMessages;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableApiv3(final boolean enableApiv3) {
    this.enableApiv3 = enableApiv3;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableUserAccessTokens(final boolean enableUserAccessTokens) {
    this.enableUserAccessTokens = enableUserAccessTokens;
  }

  @java.lang.SuppressWarnings("all")
  public void setAllowedUntrustedInternalConnections(final String allowedUntrustedInternalConnections) {
    this.allowedUntrustedInternalConnections = allowedUntrustedInternalConnections;
  }

  @java.lang.SuppressWarnings("all")
  public void setSessionIdleTimeoutInMinutes(final int sessionIdleTimeoutInMinutes) {
    this.sessionIdleTimeoutInMinutes = sessionIdleTimeoutInMinutes;
  }

  @java.lang.SuppressWarnings("all")
  public void setCloseUnusedDirectMessages(final boolean closeUnusedDirectMessages) {
    this.closeUnusedDirectMessages = closeUnusedDirectMessages;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnablePreviewFeatures(final boolean enablePreviewFeatures) {
    this.enablePreviewFeatures = enablePreviewFeatures;
  }

  @java.lang.SuppressWarnings("all")
  public void setExperimentalEnableAuthenticationTransfer(final boolean experimentalEnableAuthenticationTransfer) {
    this.experimentalEnableAuthenticationTransfer = experimentalEnableAuthenticationTransfer;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableTutorial(final boolean enableTutorial) {
    this.enableTutorial = enableTutorial;
  }

  @java.lang.SuppressWarnings("all")
  public void setMinimumHashtagLength(final int minimumHashtagLength) {
    this.minimumHashtagLength = minimumHashtagLength;
  }

  @java.lang.SuppressWarnings("all")
  public void setDisableBotsWhenOwnerIsDeactivated(final boolean disableBotsWhenOwnerIsDeactivated) {
    this.disableBotsWhenOwnerIsDeactivated = disableBotsWhenOwnerIsDeactivated;
  }

  @java.lang.SuppressWarnings("all")
  public void setExperimentalGroupUnreadChannels(final GroupUnreadChannels experimentalGroupUnreadChannels) {
    this.experimentalGroupUnreadChannels = experimentalGroupUnreadChannels;
  }

  @java.lang.SuppressWarnings("all")
  public void setExperimentalEnableDefaultChannelLeaveJoinMessages(final boolean experimentalEnableDefaultChannelLeaveJoinMessages) {
    this.experimentalEnableDefaultChannelLeaveJoinMessages = experimentalEnableDefaultChannelLeaveJoinMessages;
  }

  @java.lang.SuppressWarnings("all")
  public void setAllowCookiesForSubdomains(final boolean allowCookiesForSubdomains) {
    this.allowCookiesForSubdomains = allowCookiesForSubdomains;
  }

  @java.lang.SuppressWarnings("all")
  public void setWebsocketUrl(final String websocketUrl) {
    this.websocketUrl = websocketUrl;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableEmailInvitations(final boolean enableEmailInvitations) {
    this.enableEmailInvitations = enableEmailInvitations;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableApiTeamDeletion(final boolean enableApiTeamDeletion) {
    this.enableApiTeamDeletion = enableApiTeamDeletion;
  }

  @java.lang.SuppressWarnings("all")
  public void setExperimentalEnableHardenedMode(final boolean experimentalEnableHardenedMode) {
    this.experimentalEnableHardenedMode = experimentalEnableHardenedMode;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableGifPicker(final boolean enableGifPicker) {
    this.enableGifPicker = enableGifPicker;
  }

  @java.lang.SuppressWarnings("all")
  public void setGfycatApiKey(final String gfycatApiKey) {
    this.gfycatApiKey = gfycatApiKey;
  }

  @java.lang.SuppressWarnings("all")
  public void setGfycatApiSecret(final String gfycatApiSecret) {
    this.gfycatApiSecret = gfycatApiSecret;
  }

  @java.lang.SuppressWarnings("all")
  public void setExperimentalLimitClientConfig(final boolean experimentalLimitClientConfig) {
    this.experimentalLimitClientConfig = experimentalLimitClientConfig;
  }

  @java.lang.SuppressWarnings("all")
  public void setCorsExposedHeaders(final String corsExposedHeaders) {
    this.corsExposedHeaders = corsExposedHeaders;
  }

  @java.lang.SuppressWarnings("all")
  public void setCorsAllowCredentials(final boolean corsAllowCredentials) {
    this.corsAllowCredentials = corsAllowCredentials;
  }

  @java.lang.SuppressWarnings("all")
  public void setCorsDebug(final boolean corsDebug) {
    this.corsDebug = corsDebug;
  }

  @java.lang.SuppressWarnings("all")
  public void setExperimentalChannelOrganization(final boolean experimentalChannelOrganization) {
    this.experimentalChannelOrganization = experimentalChannelOrganization;
  }

  @java.lang.SuppressWarnings("all")
  public void setTlsMinVer(final String tlsMinVer) {
    this.tlsMinVer = tlsMinVer;
  }

  @java.lang.SuppressWarnings("all")
  public void setTlsStrictTransport(final boolean tlsStrictTransport) {
    this.tlsStrictTransport = tlsStrictTransport;
  }

  @java.lang.SuppressWarnings("all")
  public void setTlsStrictTransportMaxAge(final long tlsStrictTransportMaxAge) {
    this.tlsStrictTransportMaxAge = tlsStrictTransportMaxAge;
  }

  @java.lang.SuppressWarnings("all")
  public void setTlsOverwriteCiphers(final List<String> tlsOverwriteCiphers) {
    this.tlsOverwriteCiphers = tlsOverwriteCiphers;
  }

  @java.lang.SuppressWarnings("all")
  public void setExperimentalStrictCsrfEnforcement(final boolean experimentalStrictCsrfEnforcement) {
    this.experimentalStrictCsrfEnforcement = experimentalStrictCsrfEnforcement;
  }

  @java.lang.SuppressWarnings("all")
  public void setDisableLegacyMfa(final boolean disableLegacyMfa) {
    this.disableLegacyMfa = disableLegacyMfa;
  }

  @java.lang.SuppressWarnings("all")
  public void setTrustedProxyIpHeader(final List<String> trustedProxyIpHeader) {
    this.trustedProxyIpHeader = trustedProxyIpHeader;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableBotAccountCreation(final boolean enableBotAccountCreation) {
    this.enableBotAccountCreation = enableBotAccountCreation;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableSvgs(final boolean enableSvgs) {
    this.enableSvgs = enableSvgs;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableLatex(final boolean enableLatex) {
    this.enableLatex = enableLatex;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableOpenTracing(final boolean enableOpenTracing) {
    this.enableOpenTracing = enableOpenTracing;
  }

  @java.lang.SuppressWarnings("all")
  public void setIdleTimeout(final int idleTimeout) {
    this.idleTimeout = idleTimeout;
  }

  @java.lang.SuppressWarnings("all")
  public void setExperimentalChannelSidebarOrganization(final ChannelSidebarOrganization experimentalChannelSidebarOrganization) {
    this.experimentalChannelSidebarOrganization = experimentalChannelSidebarOrganization;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof ServiceSettings)) return false;
    final ServiceSettings other = (ServiceSettings) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    if (this.isUseLetsEncrypt() != other.isUseLetsEncrypt()) return false;
    if (this.isForward80To443() != other.isForward80To443()) return false;
    if (this.getReadTimeout() != other.getReadTimeout()) return false;
    if (this.getWriteTimeout() != other.getWriteTimeout()) return false;
    if (this.getMaximumLoginAttempts() != other.getMaximumLoginAttempts()) return false;
    if (this.isEnableOAuthServiceProvider() != other.isEnableOAuthServiceProvider()) return false;
    if (this.isEnableIncomingWebhooks() != other.isEnableIncomingWebhooks()) return false;
    if (this.isEnableOutgoingWebhooks() != other.isEnableOutgoingWebhooks()) return false;
    if (this.isEnableCommands() != other.isEnableCommands()) return false;
    if (this.isEnableOnlyAdminIntegrations() != other.isEnableOnlyAdminIntegrations()) return false;
    if (this.isEnablePostUsernameOverride() != other.isEnablePostUsernameOverride()) return false;
    if (this.isEnablePostIconOverride() != other.isEnablePostIconOverride()) return false;
    if (this.isEnableLinkPreviews() != other.isEnableLinkPreviews()) return false;
    if (this.isEnableTesting() != other.isEnableTesting()) return false;
    if (this.isEnableDeveloper() != other.isEnableDeveloper()) return false;
    if (this.isEnableSecurityFixAlert() != other.isEnableSecurityFixAlert()) return false;
    if (this.isEnableInsecureOutgoingConnections() != other.isEnableInsecureOutgoingConnections()) return false;
    if (this.isEnableMultifactorAuthentication() != other.isEnableMultifactorAuthentication()) return false;
    if (this.isEnforceMultifactorAuthentication() != other.isEnforceMultifactorAuthentication()) return false;
    if (this.getSessionLengthWebInDays() != other.getSessionLengthWebInDays()) return false;
    if (this.getSessionLengthMobileInDays() != other.getSessionLengthMobileInDays()) return false;
    if (this.getSessionLengthSsoInDays() != other.getSessionLengthSsoInDays()) return false;
    if (this.getSessionCacheInMinutes() != other.getSessionCacheInMinutes()) return false;
    if (this.getWebsocketSecurePort() != other.getWebsocketSecurePort()) return false;
    if (this.getWebsocketPort() != other.getWebsocketPort()) return false;
    if (this.isEnableCustomEmoji() != other.isEnableCustomEmoji()) return false;
    if (this.getPostEditTimeLimit() != other.getPostEditTimeLimit()) return false;
    if (this.getTimeBetweenUserTypingUpdatesMilliseconds() != other.getTimeBetweenUserTypingUpdatesMilliseconds()) return false;
    if (this.isEnablePostSearch() != other.isEnablePostSearch()) return false;
    if (this.isEnableUserTypingMessages() != other.isEnableUserTypingMessages()) return false;
    if (this.isEnableUserStatuses() != other.isEnableUserStatuses()) return false;
    if (this.getClusterLogTimeoutMilliseconds() != other.getClusterLogTimeoutMilliseconds()) return false;
    if (this.getGoroutineHealthThreshold() != other.getGoroutineHealthThreshold()) return false;
    if (this.isEnableEmojiPicker() != other.isEnableEmojiPicker()) return false;
    if (this.isEnableChannelViewedMessages() != other.isEnableChannelViewedMessages()) return false;
    if (this.isEnableApiv3() != other.isEnableApiv3()) return false;
    if (this.isEnableUserAccessTokens() != other.isEnableUserAccessTokens()) return false;
    if (this.getSessionIdleTimeoutInMinutes() != other.getSessionIdleTimeoutInMinutes()) return false;
    if (this.isCloseUnusedDirectMessages() != other.isCloseUnusedDirectMessages()) return false;
    if (this.isEnablePreviewFeatures() != other.isEnablePreviewFeatures()) return false;
    if (this.isExperimentalEnableAuthenticationTransfer() != other.isExperimentalEnableAuthenticationTransfer()) return false;
    if (this.isEnableTutorial() != other.isEnableTutorial()) return false;
    if (this.getMinimumHashtagLength() != other.getMinimumHashtagLength()) return false;
    if (this.isDisableBotsWhenOwnerIsDeactivated() != other.isDisableBotsWhenOwnerIsDeactivated()) return false;
    if (this.isExperimentalEnableDefaultChannelLeaveJoinMessages() != other.isExperimentalEnableDefaultChannelLeaveJoinMessages()) return false;
    if (this.isAllowCookiesForSubdomains() != other.isAllowCookiesForSubdomains()) return false;
    if (this.isEnableEmailInvitations() != other.isEnableEmailInvitations()) return false;
    if (this.isEnableApiTeamDeletion() != other.isEnableApiTeamDeletion()) return false;
    if (this.isExperimentalEnableHardenedMode() != other.isExperimentalEnableHardenedMode()) return false;
    if (this.isEnableGifPicker() != other.isEnableGifPicker()) return false;
    if (this.isExperimentalLimitClientConfig() != other.isExperimentalLimitClientConfig()) return false;
    if (this.isCorsAllowCredentials() != other.isCorsAllowCredentials()) return false;
    if (this.isCorsDebug() != other.isCorsDebug()) return false;
    if (this.isExperimentalChannelOrganization() != other.isExperimentalChannelOrganization()) return false;
    if (this.isTlsStrictTransport() != other.isTlsStrictTransport()) return false;
    if (this.getTlsStrictTransportMaxAge() != other.getTlsStrictTransportMaxAge()) return false;
    if (this.isExperimentalLdapGroupSync() != other.isExperimentalLdapGroupSync()) return false;
    if (this.isExperimentalStrictCsrfEnforcement() != other.isExperimentalStrictCsrfEnforcement()) return false;
    if (this.isDisableLegacyMfa() != other.isDisableLegacyMfa()) return false;
    if (this.isEnableBotAccountCreation() != other.isEnableBotAccountCreation()) return false;
    if (this.isEnableSvgs() != other.isEnableSvgs()) return false;
    if (this.isEnableLatex() != other.isEnableLatex()) return false;
    if (this.isEnableOpenTracing() != other.isEnableOpenTracing()) return false;
    if (this.getIdleTimeout() != other.getIdleTimeout()) return false;
    final java.lang.Object this$siteUrl = this.getSiteUrl();
    final java.lang.Object other$siteUrl = other.getSiteUrl();
    if (this$siteUrl == null ? other$siteUrl != null : !this$siteUrl.equals(other$siteUrl)) return false;
    final java.lang.Object this$licenseFileLocation = this.getLicenseFileLocation();
    final java.lang.Object other$licenseFileLocation = other.getLicenseFileLocation();
    if (this$licenseFileLocation == null ? other$licenseFileLocation != null : !this$licenseFileLocation.equals(other$licenseFileLocation)) return false;
    final java.lang.Object this$listenAddress = this.getListenAddress();
    final java.lang.Object other$listenAddress = other.getListenAddress();
    if (this$listenAddress == null ? other$listenAddress != null : !this$listenAddress.equals(other$listenAddress)) return false;
    final java.lang.Object this$connectionSecurity = this.getConnectionSecurity();
    final java.lang.Object other$connectionSecurity = other.getConnectionSecurity();
    if (this$connectionSecurity == null ? other$connectionSecurity != null : !this$connectionSecurity.equals(other$connectionSecurity)) return false;
    final java.lang.Object this$tlsCertFile = this.getTlsCertFile();
    final java.lang.Object other$tlsCertFile = other.getTlsCertFile();
    if (this$tlsCertFile == null ? other$tlsCertFile != null : !this$tlsCertFile.equals(other$tlsCertFile)) return false;
    final java.lang.Object this$tlsKeyFile = this.getTlsKeyFile();
    final java.lang.Object other$tlsKeyFile = other.getTlsKeyFile();
    if (this$tlsKeyFile == null ? other$tlsKeyFile != null : !this$tlsKeyFile.equals(other$tlsKeyFile)) return false;
    final java.lang.Object this$letsEncryptCertificateCacheFile = this.getLetsEncryptCertificateCacheFile();
    final java.lang.Object other$letsEncryptCertificateCacheFile = other.getLetsEncryptCertificateCacheFile();
    if (this$letsEncryptCertificateCacheFile == null ? other$letsEncryptCertificateCacheFile != null : !this$letsEncryptCertificateCacheFile.equals(other$letsEncryptCertificateCacheFile)) return false;
    final java.lang.Object this$googleDeveloperKey = this.getGoogleDeveloperKey();
    final java.lang.Object other$googleDeveloperKey = other.getGoogleDeveloperKey();
    if (this$googleDeveloperKey == null ? other$googleDeveloperKey != null : !this$googleDeveloperKey.equals(other$googleDeveloperKey)) return false;
    final java.lang.Object this$allowCorsFrom = this.getAllowCorsFrom();
    final java.lang.Object other$allowCorsFrom = other.getAllowCorsFrom();
    if (this$allowCorsFrom == null ? other$allowCorsFrom != null : !this$allowCorsFrom.equals(other$allowCorsFrom)) return false;
    final java.lang.Object this$webServerMode = this.getWebServerMode();
    final java.lang.Object other$webServerMode = other.getWebServerMode();
    if (this$webServerMode == null ? other$webServerMode != null : !this$webServerMode.equals(other$webServerMode)) return false;
    final java.lang.Object this$restrictCustomEmojiCreation = this.getRestrictCustomEmojiCreation();
    final java.lang.Object other$restrictCustomEmojiCreation = other.getRestrictCustomEmojiCreation();
    if (this$restrictCustomEmojiCreation == null ? other$restrictCustomEmojiCreation != null : !this$restrictCustomEmojiCreation.equals(other$restrictCustomEmojiCreation)) return false;
    final java.lang.Object this$restrictPostDelete = this.getRestrictPostDelete();
    final java.lang.Object other$restrictPostDelete = other.getRestrictPostDelete();
    if (this$restrictPostDelete == null ? other$restrictPostDelete != null : !this$restrictPostDelete.equals(other$restrictPostDelete)) return false;
    final java.lang.Object this$allowEditPost = this.getAllowEditPost();
    final java.lang.Object other$allowEditPost = other.getAllowEditPost();
    if (this$allowEditPost == null ? other$allowEditPost != null : !this$allowEditPost.equals(other$allowEditPost)) return false;
    final java.lang.Object this$allowedUntrustedInternalConnections = this.getAllowedUntrustedInternalConnections();
    final java.lang.Object other$allowedUntrustedInternalConnections = other.getAllowedUntrustedInternalConnections();
    if (this$allowedUntrustedInternalConnections == null ? other$allowedUntrustedInternalConnections != null : !this$allowedUntrustedInternalConnections.equals(other$allowedUntrustedInternalConnections)) return false;
    final java.lang.Object this$imageProxyType = this.getImageProxyType();
    final java.lang.Object other$imageProxyType = other.getImageProxyType();
    if (this$imageProxyType == null ? other$imageProxyType != null : !this$imageProxyType.equals(other$imageProxyType)) return false;
    final java.lang.Object this$imageProxyOptions = this.getImageProxyOptions();
    final java.lang.Object other$imageProxyOptions = other.getImageProxyOptions();
    if (this$imageProxyOptions == null ? other$imageProxyOptions != null : !this$imageProxyOptions.equals(other$imageProxyOptions)) return false;
    final java.lang.Object this$imageProxyUrl = this.getImageProxyUrl();
    final java.lang.Object other$imageProxyUrl = other.getImageProxyUrl();
    if (this$imageProxyUrl == null ? other$imageProxyUrl != null : !this$imageProxyUrl.equals(other$imageProxyUrl)) return false;
    final java.lang.Object this$experimentalGroupUnreadChannels = this.getExperimentalGroupUnreadChannels();
    final java.lang.Object other$experimentalGroupUnreadChannels = other.getExperimentalGroupUnreadChannels();
    if (this$experimentalGroupUnreadChannels == null ? other$experimentalGroupUnreadChannels != null : !this$experimentalGroupUnreadChannels.equals(other$experimentalGroupUnreadChannels)) return false;
    final java.lang.Object this$websocketUrl = this.getWebsocketUrl();
    final java.lang.Object other$websocketUrl = other.getWebsocketUrl();
    if (this$websocketUrl == null ? other$websocketUrl != null : !this$websocketUrl.equals(other$websocketUrl)) return false;
    final java.lang.Object this$gfycatApiKey = this.getGfycatApiKey();
    final java.lang.Object other$gfycatApiKey = other.getGfycatApiKey();
    if (this$gfycatApiKey == null ? other$gfycatApiKey != null : !this$gfycatApiKey.equals(other$gfycatApiKey)) return false;
    final java.lang.Object this$gfycatApiSecret = this.getGfycatApiSecret();
    final java.lang.Object other$gfycatApiSecret = other.getGfycatApiSecret();
    if (this$gfycatApiSecret == null ? other$gfycatApiSecret != null : !this$gfycatApiSecret.equals(other$gfycatApiSecret)) return false;
    final java.lang.Object this$corsExposedHeaders = this.getCorsExposedHeaders();
    final java.lang.Object other$corsExposedHeaders = other.getCorsExposedHeaders();
    if (this$corsExposedHeaders == null ? other$corsExposedHeaders != null : !this$corsExposedHeaders.equals(other$corsExposedHeaders)) return false;
    final java.lang.Object this$tlsMinVer = this.getTlsMinVer();
    final java.lang.Object other$tlsMinVer = other.getTlsMinVer();
    if (this$tlsMinVer == null ? other$tlsMinVer != null : !this$tlsMinVer.equals(other$tlsMinVer)) return false;
    final java.lang.Object this$tlsOverwriteCiphers = this.getTlsOverwriteCiphers();
    final java.lang.Object other$tlsOverwriteCiphers = other.getTlsOverwriteCiphers();
    if (this$tlsOverwriteCiphers == null ? other$tlsOverwriteCiphers != null : !this$tlsOverwriteCiphers.equals(other$tlsOverwriteCiphers)) return false;
    final java.lang.Object this$trustedProxyIpHeader = this.getTrustedProxyIpHeader();
    final java.lang.Object other$trustedProxyIpHeader = other.getTrustedProxyIpHeader();
    if (this$trustedProxyIpHeader == null ? other$trustedProxyIpHeader != null : !this$trustedProxyIpHeader.equals(other$trustedProxyIpHeader)) return false;
    final java.lang.Object this$experimentalChannelSidebarOrganization = this.getExperimentalChannelSidebarOrganization();
    final java.lang.Object other$experimentalChannelSidebarOrganization = other.getExperimentalChannelSidebarOrganization();
    if (this$experimentalChannelSidebarOrganization == null ? other$experimentalChannelSidebarOrganization != null : !this$experimentalChannelSidebarOrganization.equals(other$experimentalChannelSidebarOrganization)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof ServiceSettings;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + (this.isUseLetsEncrypt() ? 79 : 97);
    result = result * PRIME + (this.isForward80To443() ? 79 : 97);
    result = result * PRIME + this.getReadTimeout();
    result = result * PRIME + this.getWriteTimeout();
    result = result * PRIME + this.getMaximumLoginAttempts();
    result = result * PRIME + (this.isEnableOAuthServiceProvider() ? 79 : 97);
    result = result * PRIME + (this.isEnableIncomingWebhooks() ? 79 : 97);
    result = result * PRIME + (this.isEnableOutgoingWebhooks() ? 79 : 97);
    result = result * PRIME + (this.isEnableCommands() ? 79 : 97);
    result = result * PRIME + (this.isEnableOnlyAdminIntegrations() ? 79 : 97);
    result = result * PRIME + (this.isEnablePostUsernameOverride() ? 79 : 97);
    result = result * PRIME + (this.isEnablePostIconOverride() ? 79 : 97);
    result = result * PRIME + (this.isEnableLinkPreviews() ? 79 : 97);
    result = result * PRIME + (this.isEnableTesting() ? 79 : 97);
    result = result * PRIME + (this.isEnableDeveloper() ? 79 : 97);
    result = result * PRIME + (this.isEnableSecurityFixAlert() ? 79 : 97);
    result = result * PRIME + (this.isEnableInsecureOutgoingConnections() ? 79 : 97);
    result = result * PRIME + (this.isEnableMultifactorAuthentication() ? 79 : 97);
    result = result * PRIME + (this.isEnforceMultifactorAuthentication() ? 79 : 97);
    result = result * PRIME + this.getSessionLengthWebInDays();
    result = result * PRIME + this.getSessionLengthMobileInDays();
    result = result * PRIME + this.getSessionLengthSsoInDays();
    result = result * PRIME + this.getSessionCacheInMinutes();
    result = result * PRIME + this.getWebsocketSecurePort();
    result = result * PRIME + this.getWebsocketPort();
    result = result * PRIME + (this.isEnableCustomEmoji() ? 79 : 97);
    result = result * PRIME + this.getPostEditTimeLimit();
    final long $timeBetweenUserTypingUpdatesMilliseconds = this.getTimeBetweenUserTypingUpdatesMilliseconds();
    result = result * PRIME + (int) ($timeBetweenUserTypingUpdatesMilliseconds >>> 32 ^ $timeBetweenUserTypingUpdatesMilliseconds);
    result = result * PRIME + (this.isEnablePostSearch() ? 79 : 97);
    result = result * PRIME + (this.isEnableUserTypingMessages() ? 79 : 97);
    result = result * PRIME + (this.isEnableUserStatuses() ? 79 : 97);
    result = result * PRIME + this.getClusterLogTimeoutMilliseconds();
    result = result * PRIME + this.getGoroutineHealthThreshold();
    result = result * PRIME + (this.isEnableEmojiPicker() ? 79 : 97);
    result = result * PRIME + (this.isEnableChannelViewedMessages() ? 79 : 97);
    result = result * PRIME + (this.isEnableApiv3() ? 79 : 97);
    result = result * PRIME + (this.isEnableUserAccessTokens() ? 79 : 97);
    result = result * PRIME + this.getSessionIdleTimeoutInMinutes();
    result = result * PRIME + (this.isCloseUnusedDirectMessages() ? 79 : 97);
    result = result * PRIME + (this.isEnablePreviewFeatures() ? 79 : 97);
    result = result * PRIME + (this.isExperimentalEnableAuthenticationTransfer() ? 79 : 97);
    result = result * PRIME + (this.isEnableTutorial() ? 79 : 97);
    result = result * PRIME + this.getMinimumHashtagLength();
    result = result * PRIME + (this.isDisableBotsWhenOwnerIsDeactivated() ? 79 : 97);
    result = result * PRIME + (this.isExperimentalEnableDefaultChannelLeaveJoinMessages() ? 79 : 97);
    result = result * PRIME + (this.isAllowCookiesForSubdomains() ? 79 : 97);
    result = result * PRIME + (this.isEnableEmailInvitations() ? 79 : 97);
    result = result * PRIME + (this.isEnableApiTeamDeletion() ? 79 : 97);
    result = result * PRIME + (this.isExperimentalEnableHardenedMode() ? 79 : 97);
    result = result * PRIME + (this.isEnableGifPicker() ? 79 : 97);
    result = result * PRIME + (this.isExperimentalLimitClientConfig() ? 79 : 97);
    result = result * PRIME + (this.isCorsAllowCredentials() ? 79 : 97);
    result = result * PRIME + (this.isCorsDebug() ? 79 : 97);
    result = result * PRIME + (this.isExperimentalChannelOrganization() ? 79 : 97);
    result = result * PRIME + (this.isTlsStrictTransport() ? 79 : 97);
    final long $tlsStrictTransportMaxAge = this.getTlsStrictTransportMaxAge();
    result = result * PRIME + (int) ($tlsStrictTransportMaxAge >>> 32 ^ $tlsStrictTransportMaxAge);
    result = result * PRIME + (this.isExperimentalLdapGroupSync() ? 79 : 97);
    result = result * PRIME + (this.isExperimentalStrictCsrfEnforcement() ? 79 : 97);
    result = result * PRIME + (this.isDisableLegacyMfa() ? 79 : 97);
    result = result * PRIME + (this.isEnableBotAccountCreation() ? 79 : 97);
    result = result * PRIME + (this.isEnableSvgs() ? 79 : 97);
    result = result * PRIME + (this.isEnableLatex() ? 79 : 97);
    result = result * PRIME + (this.isEnableOpenTracing() ? 79 : 97);
    result = result * PRIME + this.getIdleTimeout();
    final java.lang.Object $siteUrl = this.getSiteUrl();
    result = result * PRIME + ($siteUrl == null ? 43 : $siteUrl.hashCode());
    final java.lang.Object $licenseFileLocation = this.getLicenseFileLocation();
    result = result * PRIME + ($licenseFileLocation == null ? 43 : $licenseFileLocation.hashCode());
    final java.lang.Object $listenAddress = this.getListenAddress();
    result = result * PRIME + ($listenAddress == null ? 43 : $listenAddress.hashCode());
    final java.lang.Object $connectionSecurity = this.getConnectionSecurity();
    result = result * PRIME + ($connectionSecurity == null ? 43 : $connectionSecurity.hashCode());
    final java.lang.Object $tlsCertFile = this.getTlsCertFile();
    result = result * PRIME + ($tlsCertFile == null ? 43 : $tlsCertFile.hashCode());
    final java.lang.Object $tlsKeyFile = this.getTlsKeyFile();
    result = result * PRIME + ($tlsKeyFile == null ? 43 : $tlsKeyFile.hashCode());
    final java.lang.Object $letsEncryptCertificateCacheFile = this.getLetsEncryptCertificateCacheFile();
    result = result * PRIME + ($letsEncryptCertificateCacheFile == null ? 43 : $letsEncryptCertificateCacheFile.hashCode());
    final java.lang.Object $googleDeveloperKey = this.getGoogleDeveloperKey();
    result = result * PRIME + ($googleDeveloperKey == null ? 43 : $googleDeveloperKey.hashCode());
    final java.lang.Object $allowCorsFrom = this.getAllowCorsFrom();
    result = result * PRIME + ($allowCorsFrom == null ? 43 : $allowCorsFrom.hashCode());
    final java.lang.Object $webServerMode = this.getWebServerMode();
    result = result * PRIME + ($webServerMode == null ? 43 : $webServerMode.hashCode());
    final java.lang.Object $restrictCustomEmojiCreation = this.getRestrictCustomEmojiCreation();
    result = result * PRIME + ($restrictCustomEmojiCreation == null ? 43 : $restrictCustomEmojiCreation.hashCode());
    final java.lang.Object $restrictPostDelete = this.getRestrictPostDelete();
    result = result * PRIME + ($restrictPostDelete == null ? 43 : $restrictPostDelete.hashCode());
    final java.lang.Object $allowEditPost = this.getAllowEditPost();
    result = result * PRIME + ($allowEditPost == null ? 43 : $allowEditPost.hashCode());
    final java.lang.Object $allowedUntrustedInternalConnections = this.getAllowedUntrustedInternalConnections();
    result = result * PRIME + ($allowedUntrustedInternalConnections == null ? 43 : $allowedUntrustedInternalConnections.hashCode());
    final java.lang.Object $imageProxyType = this.getImageProxyType();
    result = result * PRIME + ($imageProxyType == null ? 43 : $imageProxyType.hashCode());
    final java.lang.Object $imageProxyOptions = this.getImageProxyOptions();
    result = result * PRIME + ($imageProxyOptions == null ? 43 : $imageProxyOptions.hashCode());
    final java.lang.Object $imageProxyUrl = this.getImageProxyUrl();
    result = result * PRIME + ($imageProxyUrl == null ? 43 : $imageProxyUrl.hashCode());
    final java.lang.Object $experimentalGroupUnreadChannels = this.getExperimentalGroupUnreadChannels();
    result = result * PRIME + ($experimentalGroupUnreadChannels == null ? 43 : $experimentalGroupUnreadChannels.hashCode());
    final java.lang.Object $websocketUrl = this.getWebsocketUrl();
    result = result * PRIME + ($websocketUrl == null ? 43 : $websocketUrl.hashCode());
    final java.lang.Object $gfycatApiKey = this.getGfycatApiKey();
    result = result * PRIME + ($gfycatApiKey == null ? 43 : $gfycatApiKey.hashCode());
    final java.lang.Object $gfycatApiSecret = this.getGfycatApiSecret();
    result = result * PRIME + ($gfycatApiSecret == null ? 43 : $gfycatApiSecret.hashCode());
    final java.lang.Object $corsExposedHeaders = this.getCorsExposedHeaders();
    result = result * PRIME + ($corsExposedHeaders == null ? 43 : $corsExposedHeaders.hashCode());
    final java.lang.Object $tlsMinVer = this.getTlsMinVer();
    result = result * PRIME + ($tlsMinVer == null ? 43 : $tlsMinVer.hashCode());
    final java.lang.Object $tlsOverwriteCiphers = this.getTlsOverwriteCiphers();
    result = result * PRIME + ($tlsOverwriteCiphers == null ? 43 : $tlsOverwriteCiphers.hashCode());
    final java.lang.Object $trustedProxyIpHeader = this.getTrustedProxyIpHeader();
    result = result * PRIME + ($trustedProxyIpHeader == null ? 43 : $trustedProxyIpHeader.hashCode());
    final java.lang.Object $experimentalChannelSidebarOrganization = this.getExperimentalChannelSidebarOrganization();
    result = result * PRIME + ($experimentalChannelSidebarOrganization == null ? 43 : $experimentalChannelSidebarOrganization.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "ServiceSettings(siteUrl=" + this.getSiteUrl() + ", licenseFileLocation=" + this.getLicenseFileLocation() + ", listenAddress=" + this.getListenAddress() + ", connectionSecurity=" + this.getConnectionSecurity() + ", tlsCertFile=" + this.getTlsCertFile() + ", tlsKeyFile=" + this.getTlsKeyFile() + ", useLetsEncrypt=" + this.isUseLetsEncrypt() + ", letsEncryptCertificateCacheFile=" + this.getLetsEncryptCertificateCacheFile() + ", forward80To443=" + this.isForward80To443() + ", readTimeout=" + this.getReadTimeout() + ", writeTimeout=" + this.getWriteTimeout() + ", maximumLoginAttempts=" + this.getMaximumLoginAttempts() + ", googleDeveloperKey=" + this.getGoogleDeveloperKey() + ", enableOAuthServiceProvider=" + this.isEnableOAuthServiceProvider() + ", enableIncomingWebhooks=" + this.isEnableIncomingWebhooks() + ", enableOutgoingWebhooks=" + this.isEnableOutgoingWebhooks() + ", enableCommands=" + this.isEnableCommands() + ", enableOnlyAdminIntegrations=" + this.isEnableOnlyAdminIntegrations() + ", enablePostUsernameOverride=" + this.isEnablePostUsernameOverride() + ", enablePostIconOverride=" + this.isEnablePostIconOverride() + ", enableLinkPreviews=" + this.isEnableLinkPreviews() + ", enableTesting=" + this.isEnableTesting() + ", enableDeveloper=" + this.isEnableDeveloper() + ", enableSecurityFixAlert=" + this.isEnableSecurityFixAlert() + ", enableInsecureOutgoingConnections=" + this.isEnableInsecureOutgoingConnections() + ", enableMultifactorAuthentication=" + this.isEnableMultifactorAuthentication() + ", enforceMultifactorAuthentication=" + this.isEnforceMultifactorAuthentication() + ", allowCorsFrom=" + this.getAllowCorsFrom() + ", sessionLengthWebInDays=" + this.getSessionLengthWebInDays() + ", sessionLengthMobileInDays=" + this.getSessionLengthMobileInDays() + ", sessionLengthSsoInDays=" + this.getSessionLengthSsoInDays() + ", sessionCacheInMinutes=" + this.getSessionCacheInMinutes() + ", websocketSecurePort=" + this.getWebsocketSecurePort() + ", websocketPort=" + this.getWebsocketPort() + ", webServerMode=" + this.getWebServerMode() + ", enableCustomEmoji=" + this.isEnableCustomEmoji() + ", restrictCustomEmojiCreation=" + this.getRestrictCustomEmojiCreation() + ", restrictPostDelete=" + this.getRestrictPostDelete() + ", allowEditPost=" + this.getAllowEditPost() + ", postEditTimeLimit=" + this.getPostEditTimeLimit() + ", timeBetweenUserTypingUpdatesMilliseconds=" + this.getTimeBetweenUserTypingUpdatesMilliseconds() + ", enablePostSearch=" + this.isEnablePostSearch() + ", enableUserTypingMessages=" + this.isEnableUserTypingMessages() + ", enableUserStatuses=" + this.isEnableUserStatuses() + ", clusterLogTimeoutMilliseconds=" + this.getClusterLogTimeoutMilliseconds() + ", goroutineHealthThreshold=" + this.getGoroutineHealthThreshold() + ", enableEmojiPicker=" + this.isEnableEmojiPicker() + ", enableChannelViewedMessages=" + this.isEnableChannelViewedMessages() + ", enableApiv3=" + this.isEnableApiv3() + ", enableUserAccessTokens=" + this.isEnableUserAccessTokens() + ", allowedUntrustedInternalConnections=" + this.getAllowedUntrustedInternalConnections() + ", sessionIdleTimeoutInMinutes=" + this.getSessionIdleTimeoutInMinutes() + ", closeUnusedDirectMessages=" + this.isCloseUnusedDirectMessages() + ", enablePreviewFeatures=" + this.isEnablePreviewFeatures() + ", experimentalEnableAuthenticationTransfer=" + this.isExperimentalEnableAuthenticationTransfer() + ", enableTutorial=" + this.isEnableTutorial() + ", imageProxyType=" + this.getImageProxyType() + ", minimumHashtagLength=" + this.getMinimumHashtagLength() + ", disableBotsWhenOwnerIsDeactivated=" + this.isDisableBotsWhenOwnerIsDeactivated() + ", imageProxyOptions=" + this.getImageProxyOptions() + ", imageProxyUrl=" + this.getImageProxyUrl() + ", experimentalGroupUnreadChannels=" + this.getExperimentalGroupUnreadChannels() + ", experimentalEnableDefaultChannelLeaveJoinMessages=" + this.isExperimentalEnableDefaultChannelLeaveJoinMessages() + ", allowCookiesForSubdomains=" + this.isAllowCookiesForSubdomains() + ", websocketUrl=" + this.getWebsocketUrl() + ", enableEmailInvitations=" + this.isEnableEmailInvitations() + ", enableApiTeamDeletion=" + this.isEnableApiTeamDeletion() + ", experimentalEnableHardenedMode=" + this.isExperimentalEnableHardenedMode() + ", enableGifPicker=" + this.isEnableGifPicker() + ", gfycatApiKey=" + this.getGfycatApiKey() + ", gfycatApiSecret=" + this.getGfycatApiSecret() + ", experimentalLimitClientConfig=" + this.isExperimentalLimitClientConfig() + ", corsExposedHeaders=" + this.getCorsExposedHeaders() + ", corsAllowCredentials=" + this.isCorsAllowCredentials() + ", corsDebug=" + this.isCorsDebug() + ", experimentalChannelOrganization=" + this.isExperimentalChannelOrganization() + ", tlsMinVer=" + this.getTlsMinVer() + ", tlsStrictTransport=" + this.isTlsStrictTransport() + ", tlsStrictTransportMaxAge=" + this.getTlsStrictTransportMaxAge() + ", tlsOverwriteCiphers=" + this.getTlsOverwriteCiphers() + ", experimentalLdapGroupSync=" + this.isExperimentalLdapGroupSync() + ", experimentalStrictCsrfEnforcement=" + this.isExperimentalStrictCsrfEnforcement() + ", disableLegacyMfa=" + this.isDisableLegacyMfa() + ", trustedProxyIpHeader=" + this.getTrustedProxyIpHeader() + ", enableBotAccountCreation=" + this.isEnableBotAccountCreation() + ", enableSvgs=" + this.isEnableSvgs() + ", enableLatex=" + this.isEnableLatex() + ", enableOpenTracing=" + this.isEnableOpenTracing() + ", idleTimeout=" + this.getIdleTimeout() + ", experimentalChannelSidebarOrganization=" + this.getExperimentalChannelSidebarOrganization() + ")";
  }

  @Deprecated
  @java.lang.SuppressWarnings("all")
  public boolean isExperimentalLdapGroupSync() {
    return this.experimentalLdapGroupSync;
  }

  @Deprecated
  @java.lang.SuppressWarnings("all")
  public void setExperimentalLdapGroupSync(final boolean experimentalLdapGroupSync) {
    this.experimentalLdapGroupSync = experimentalLdapGroupSync;
  }
}
