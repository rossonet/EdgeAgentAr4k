// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2017 Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model.config;

import java.util.List;

/**
 * Theme settings.
 * 
 * @author Takayuki Maruyama
 * @since Mattermost Server 4.2 (Enterprise Edition)
 */
public class ThemeSettings {
  private boolean enableThemeSelection;
  private String defaultTheme;
  private boolean allowCustomThemes;
  private List<String> allowedThemes;

  @java.lang.SuppressWarnings("all")
  public ThemeSettings() {
  }

  @java.lang.SuppressWarnings("all")
  public boolean isEnableThemeSelection() {
    return this.enableThemeSelection;
  }

  @java.lang.SuppressWarnings("all")
  public String getDefaultTheme() {
    return this.defaultTheme;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isAllowCustomThemes() {
    return this.allowCustomThemes;
  }

  @java.lang.SuppressWarnings("all")
  public List<String> getAllowedThemes() {
    return this.allowedThemes;
  }

  @java.lang.SuppressWarnings("all")
  public void setEnableThemeSelection(final boolean enableThemeSelection) {
    this.enableThemeSelection = enableThemeSelection;
  }

  @java.lang.SuppressWarnings("all")
  public void setDefaultTheme(final String defaultTheme) {
    this.defaultTheme = defaultTheme;
  }

  @java.lang.SuppressWarnings("all")
  public void setAllowCustomThemes(final boolean allowCustomThemes) {
    this.allowCustomThemes = allowCustomThemes;
  }

  @java.lang.SuppressWarnings("all")
  public void setAllowedThemes(final List<String> allowedThemes) {
    this.allowedThemes = allowedThemes;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof ThemeSettings)) return false;
    final ThemeSettings other = (ThemeSettings) o;
    if (!other.canEqual((java.lang.Object) this)) return false;
    if (this.isEnableThemeSelection() != other.isEnableThemeSelection()) return false;
    if (this.isAllowCustomThemes() != other.isAllowCustomThemes()) return false;
    final java.lang.Object this$defaultTheme = this.getDefaultTheme();
    final java.lang.Object other$defaultTheme = other.getDefaultTheme();
    if (this$defaultTheme == null ? other$defaultTheme != null : !this$defaultTheme.equals(other$defaultTheme)) return false;
    final java.lang.Object this$allowedThemes = this.getAllowedThemes();
    final java.lang.Object other$allowedThemes = other.getAllowedThemes();
    if (this$allowedThemes == null ? other$allowedThemes != null : !this$allowedThemes.equals(other$allowedThemes)) return false;
    return true;
  }

  @java.lang.SuppressWarnings("all")
  protected boolean canEqual(final java.lang.Object other) {
    return other instanceof ThemeSettings;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + (this.isEnableThemeSelection() ? 79 : 97);
    result = result * PRIME + (this.isAllowCustomThemes() ? 79 : 97);
    final java.lang.Object $defaultTheme = this.getDefaultTheme();
    result = result * PRIME + ($defaultTheme == null ? 43 : $defaultTheme.hashCode());
    final java.lang.Object $allowedThemes = this.getAllowedThemes();
    result = result * PRIME + ($allowedThemes == null ? 43 : $allowedThemes.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "ThemeSettings(enableThemeSelection=" + this.isEnableThemeSelection() + ", defaultTheme=" + this.getDefaultTheme() + ", allowCustomThemes=" + this.isAllowCustomThemes() + ", allowedThemes=" + this.getAllowedThemes() + ")";
  }
}
