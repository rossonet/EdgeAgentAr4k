// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2017-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.client4.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Login request payload.
 * 
 * @see org.ar4k.agent.mattermost.client4.api.AuthenticationApi
 * @author Takayuki Maruyama
 */
@JsonIgnoreProperties({"id", "ldap_only", "device_id"})
public final class LoginRequest {
  @JsonProperty("id")
  private final String id;
  @JsonProperty("login_id")
  private final String loginId;
  @JsonProperty("password")
  private final String password;
  @JsonProperty("ldap_only")
  private final boolean ldapOnly;
  @JsonProperty("device_id")
  private final String deviceId;

  @java.lang.SuppressWarnings("all")
  LoginRequest(final String id, final String loginId, final String password, final boolean ldapOnly, final String deviceId) {
    this.id = id;
    this.loginId = loginId;
    this.password = password;
    this.ldapOnly = ldapOnly;
    this.deviceId = deviceId;
  }


  @java.lang.SuppressWarnings("all")
  public static class LoginRequestBuilder {
    @java.lang.SuppressWarnings("all")
    private String id;
    @java.lang.SuppressWarnings("all")
    private String loginId;
    @java.lang.SuppressWarnings("all")
    private String password;
    @java.lang.SuppressWarnings("all")
    private boolean ldapOnly;
    @java.lang.SuppressWarnings("all")
    private String deviceId;

    @java.lang.SuppressWarnings("all")
    LoginRequestBuilder() {
    }

    /**
     * @return {@code this}.
     */
    @JsonProperty("id")
    @java.lang.SuppressWarnings("all")
    public LoginRequest.LoginRequestBuilder id(final String id) {
      this.id = id;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @JsonProperty("login_id")
    @java.lang.SuppressWarnings("all")
    public LoginRequest.LoginRequestBuilder loginId(final String loginId) {
      this.loginId = loginId;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @JsonProperty("password")
    @java.lang.SuppressWarnings("all")
    public LoginRequest.LoginRequestBuilder password(final String password) {
      this.password = password;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @JsonProperty("ldap_only")
    @java.lang.SuppressWarnings("all")
    public LoginRequest.LoginRequestBuilder ldapOnly(final boolean ldapOnly) {
      this.ldapOnly = ldapOnly;
      return this;
    }

    /**
     * @return {@code this}.
     */
    @JsonProperty("device_id")
    @java.lang.SuppressWarnings("all")
    public LoginRequest.LoginRequestBuilder deviceId(final String deviceId) {
      this.deviceId = deviceId;
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public LoginRequest build() {
      return new LoginRequest(this.id, this.loginId, this.password, this.ldapOnly, this.deviceId);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
      return "LoginRequest.LoginRequestBuilder(id=" + this.id + ", loginId=" + this.loginId + ", password=" + this.password + ", ldapOnly=" + this.ldapOnly + ", deviceId=" + this.deviceId + ")";
    }
  }

  @java.lang.SuppressWarnings("all")
  public static LoginRequest.LoginRequestBuilder builder() {
    return new LoginRequest.LoginRequestBuilder();
  }

  @java.lang.SuppressWarnings("all")
  public String getId() {
    return this.id;
  }

  @java.lang.SuppressWarnings("all")
  public String getLoginId() {
    return this.loginId;
  }

  @java.lang.SuppressWarnings("all")
  public String getPassword() {
    return this.password;
  }

  @java.lang.SuppressWarnings("all")
  public boolean isLdapOnly() {
    return this.ldapOnly;
  }

  @java.lang.SuppressWarnings("all")
  public String getDeviceId() {
    return this.deviceId;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof LoginRequest)) return false;
    final LoginRequest other = (LoginRequest) o;
    if (this.isLdapOnly() != other.isLdapOnly()) return false;
    final java.lang.Object this$id = this.getId();
    final java.lang.Object other$id = other.getId();
    if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
    final java.lang.Object this$loginId = this.getLoginId();
    final java.lang.Object other$loginId = other.getLoginId();
    if (this$loginId == null ? other$loginId != null : !this$loginId.equals(other$loginId)) return false;
    final java.lang.Object this$password = this.getPassword();
    final java.lang.Object other$password = other.getPassword();
    if (this$password == null ? other$password != null : !this$password.equals(other$password)) return false;
    final java.lang.Object this$deviceId = this.getDeviceId();
    final java.lang.Object other$deviceId = other.getDeviceId();
    if (this$deviceId == null ? other$deviceId != null : !this$deviceId.equals(other$deviceId)) return false;
    return true;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    result = result * PRIME + (this.isLdapOnly() ? 79 : 97);
    final java.lang.Object $id = this.getId();
    result = result * PRIME + ($id == null ? 43 : $id.hashCode());
    final java.lang.Object $loginId = this.getLoginId();
    result = result * PRIME + ($loginId == null ? 43 : $loginId.hashCode());
    final java.lang.Object $password = this.getPassword();
    result = result * PRIME + ($password == null ? 43 : $password.hashCode());
    final java.lang.Object $deviceId = this.getDeviceId();
    result = result * PRIME + ($deviceId == null ? 43 : $deviceId.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "LoginRequest(id=" + this.getId() + ", loginId=" + this.getLoginId() + ", password=" + this.getPassword() + ", ldapOnly=" + this.isLdapOnly() + ", deviceId=" + this.getDeviceId() + ")";
  }
}
