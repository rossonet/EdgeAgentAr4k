// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2018 Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.model.config.plugin;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * Plugin state.
 *
 * @author Takayuki Maruyama
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class PluginState {
	private boolean enable;

	@java.lang.SuppressWarnings("all")
	public PluginState() {
	}

	@java.lang.SuppressWarnings("all")
	public boolean isEnable() {
		return this.enable;
	}

	@java.lang.SuppressWarnings("all")
	public void setEnable(final boolean enable) {
		this.enable = enable;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof PluginState)) return false;
		final PluginState other = (PluginState) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (this.isEnable() != other.isEnable()) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof PluginState;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + (this.isEnable() ? 79 : 97);
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "PluginState(enable=" + this.isEnable() + ")";
	}
}
