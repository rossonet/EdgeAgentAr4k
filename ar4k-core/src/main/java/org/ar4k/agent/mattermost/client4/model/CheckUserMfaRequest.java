// Generated by delombok at Sun Apr 18 22:20:18 CEST 2021
/*
 * Copyright (c) 2017-present, Takayuki Maruyama
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 * 
 * http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package org.ar4k.agent.mattermost.client4.model;

/**
 * Check user MFA request payload.
 * 
 * @author Takayuki Maruyama
 */
public final class CheckUserMfaRequest {
  private final String loginId;

  @java.lang.SuppressWarnings("all")
  CheckUserMfaRequest(final String loginId) {
    this.loginId = loginId;
  }


  @java.lang.SuppressWarnings("all")
  public static class CheckUserMfaRequestBuilder {
    @java.lang.SuppressWarnings("all")
    private String loginId;

    @java.lang.SuppressWarnings("all")
    CheckUserMfaRequestBuilder() {
    }

    /**
     * @return {@code this}.
     */
    @java.lang.SuppressWarnings("all")
    public CheckUserMfaRequest.CheckUserMfaRequestBuilder loginId(final String loginId) {
      this.loginId = loginId;
      return this;
    }

    @java.lang.SuppressWarnings("all")
    public CheckUserMfaRequest build() {
      return new CheckUserMfaRequest(this.loginId);
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
      return "CheckUserMfaRequest.CheckUserMfaRequestBuilder(loginId=" + this.loginId + ")";
    }
  }

  @java.lang.SuppressWarnings("all")
  public static CheckUserMfaRequest.CheckUserMfaRequestBuilder builder() {
    return new CheckUserMfaRequest.CheckUserMfaRequestBuilder();
  }

  @java.lang.SuppressWarnings("all")
  public String getLoginId() {
    return this.loginId;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public boolean equals(final java.lang.Object o) {
    if (o == this) return true;
    if (!(o instanceof CheckUserMfaRequest)) return false;
    final CheckUserMfaRequest other = (CheckUserMfaRequest) o;
    final java.lang.Object this$loginId = this.getLoginId();
    final java.lang.Object other$loginId = other.getLoginId();
    if (this$loginId == null ? other$loginId != null : !this$loginId.equals(other$loginId)) return false;
    return true;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public int hashCode() {
    final int PRIME = 59;
    int result = 1;
    final java.lang.Object $loginId = this.getLoginId();
    result = result * PRIME + ($loginId == null ? 43 : $loginId.hashCode());
    return result;
  }

  @java.lang.Override
  @java.lang.SuppressWarnings("all")
  public java.lang.String toString() {
    return "CheckUserMfaRequest(loginId=" + this.getLoginId() + ")";
  }
}
