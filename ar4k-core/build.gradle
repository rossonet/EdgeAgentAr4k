description = "core Ar4k Edge Gateway"

apply plugin: 'com.google.protobuf'

dependencies {
	//compile project(':ar4k-terminal')
	// crittografia
	compile('org.bouncycastle:bcprov-jdk15on:1.59')
	compile('org.bouncycastle:bcpkix-jdk15on:1.59')
	// rilevamento hardware e so
	compile 'com.github.oshi:oshi-core:3.5.0'
	compile group: 'com.pi4j', name: 'pi4j-core', version: '1.2'
	// ssh
	compile "com.jcraft:jsch:0.1.55"
	compile group: 'org.apache.sshd', name: 'sshd-core', version: '2.2.0'
	compile group: 'org.apache.sshd', name: 'sshd-sftp', version: '2.2.0'
	compile group: 'org.apache.sshd', name: 'sshd-common', version: '2.2.0'
	compile group: 'org.apache.sshd', name: 'sshd-scp', version: '2.2.0'
	// spring
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile("org.springframework:spring-jms")
	compile('org.springframework.boot:spring-boot-starter-logging')
	//compile('org.springframework.boot:spring-boot-starter-webflux')
	compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
	compile group: 'ch.qos.logback', name: 'logback-core', version: '1.2.3'
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-integration')
	// state machine
	compile "org.springframework.statemachine:spring-statemachine-core:${rootProject.ext.springStatemachineVersion}"
	// jms
	compile group: 'org.springframework.integration', name: 'spring-integration-jms'
	// mail
	//compile group: 'org.springframework.integration', name: 'spring-integration-mail'
	// mqtt
	//compile group: 'org.springframework.integration', name: 'spring-integration-mqtt'
	// file
	compile group: 'org.springframework.integration', name: 'spring-integration-file'
	// git
	//compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.0.2.201807311906-r'
	compile 'dnsjava:dnsjava:2.1.9'
	//compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.6'
	// datastore
	compile group: 'org.fusesource.jdbm', name: 'jdbm', version: '2.0.1'
	compile group: 'joda-time', name: 'joda-time', version: '2.10'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.4'
	compile group: 'org.json', name: 'json', version: '20180813'
	compile group: 'org.yaml', name: 'snakeyaml', version: '1.24'

	// grpc
	compile ("io.grpc:grpc-netty-shaded:1.31.0") //{ exclude (group:"com.google.guava",module:"guava")}
	compile ('io.grpc:grpc-protobuf:1.31.0')//{ exclude (group:"com.google.guava",module:"guava")}
	compile ('io.grpc:grpc-stub:1.31.0')//{ exclude (group:"com.google.guava",module:"guava")}
	compile ("io.grpc:grpc-auth:1.31.0")//{ exclude (group:"com.google.guava",module:"guava")}
	runtime 'io.netty:netty-tcnative-boringssl-static:2.0.20.Final'
	//compile group: 'io.netty', name: 'netty-tcnative-boringssl-static', version: '2.0.28.Final'


	//compile group: 'com.google.guava', name: 'guava', version: '22.0'

	//script engine groovy-jsr223
	compile 'org.codehaus.groovy:groovy-all:2.5.13'
	compile group: 'org.codehaus.groovy', name: 'groovy-jsr223', version: '2.5.13'
	//compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
	// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

	// per let's encrypt
	// compile 'org.shredzone.acme4j:acme4j:2.7'
	//testCompile group: 'com.google.guava', name: 'guava', version: '25.0-jre'
	// commons-compress
	compile group: 'org.apache.commons', name: 'commons-compress', version: '1.20'
	// https://mvnrepository.com/artifact/commons-codec/commons-codec
	compile group: 'commons-codec', name: 'commons-codec', version: '1.14'
	// https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit
	compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.9.0.202009080501-r'
	

}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.7.1"
		generatedFilesBaseDir = "$projectDir/src"
	}
	plugins {
		grpc { artifact = 'io.grpc:protoc-gen-grpc-java:1.20.0' }
		//javalite { artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0' }
	}
	generateProtoTasks {
		all().each { task ->
			task.group = 'GRPC ProtoBuf'
			task.plugins {
				grpc {
					outputSubDir = 'java' //option 'lite'
				}
				//javalite { }
			}
		}
	}
}

bootJar {
	enabled = false
}
