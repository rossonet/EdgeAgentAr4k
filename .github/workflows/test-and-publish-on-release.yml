name: Test release branch and publish on GitHub Packages

on:
  push:
    branches:
    - release

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Popolate Env
      env:
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      run: echo $GITHUB_ACTOR
    - name: Build and test with Gradle
      run: ./gradlew clean test
    - name: Publish with Gradle
      env:
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}
      run: ./gradlew publish
    - name: Build Docker image
      run: ./gradlew ar4kDockerContainerDruido
    - name: Log into GitHub registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
    - name: Push image on GitHub
      run: |
        IMAGE_NAME=org.ar4k.agent/ar4k-agent-druido
        IMAGE_ID=docker.pkg.github.com/rossonet/edgeagentar4k/ar4k-agent-druido
        VERSION=latest
        ACTUAL=$(docker images --format "{{.Tag}}:{{.Repository}}" | grep ar4k-agent-druido | cut -f1 -d:)
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME:$ACTUAL $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
    - name: Logout from GitHub
      run: docker logout docker.pkg.github.com
      # Per pubblicazione in Docker Hub
      #
      #    - name: Log into Docker Hub registry
      #      run: echo "${{ secrets.DHUB_TOKEN }}" | docker login -u rossonet --password-stdin
      #
      #   - name: Push image on Docker Hub
      #     run: |
      #     IMAGE_ID=rossonet/theia-ide
      #     VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
      #     [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
      #     [ "$VERSION" == "release" ] && VERSION=latest
      #     echo IMAGE_ID=$IMAGE_ID
      #     echo VERSION=$VERSION
      #     docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
      #     docker push $IMAGE_ID:$VERSION
      #
      #  - name: Logout from Docker Hub
      #    run: docker logout



