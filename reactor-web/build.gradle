description = "Reactor Spring WebFlux component and admin web UI"

dependencies {
  compile project(':core')
  compile('org.springframework.boot:spring-boot-starter-thymeleaf')
  compile group: 'org.springframework.integration', name: 'spring-integration-webflux'
  // https://mvnrepository.com/artifact/org.webjars.npm/font-awesome
  // https://mvnrepository.com/artifact/org.webjars/webjars-locator-core
  compile group: 'org.webjars', name: 'webjars-locator-core', version: '0.37'
  compile group: 'org.webjars.npm', name: 'font-awesome', version: '4.7.0'
  // https://mvnrepository.com/artifact/org.webjars.npm/jquery
  compile group: 'org.webjars.npm', name: 'jquery', version: '3.3.1'
  // https://mvnrepository.com/artifact/org.webjars.npm/vue
  //compile group: 'org.webjars.npm', name: 'vue', version: '2.5.17'
  // https://mvnrepository.com/artifact/org.webjars.npm/popper.js
  //compile group: 'org.webjars.npm', name: 'popper.js', version: '1.14.4'
  // https://mvnrepository.com/artifact/org.webjars.npm/chartist
  // caricato con NPM
  //compile group: 'org.webjars.npm', name: 'chartist', version: '0.11.0'
  // https://mvnrepository.com/artifact/org.webjars.npm/bootstrap
  compile group: 'org.webjars.npm', name: 'bootstrap', version: '4.1.3'
  // https://mvnrepository.com/artifact/org.webjars/d3js
  compile group: 'org.webjars', name: 'd3js', version: '5.5.0'
  // https://mvnrepository.com/artifact/org.webjars.npm/vis
  // compile group: 'org.webjars.npm', name: 'vis', version: '4.21.0'
  // https://mvnrepository.com/artifact/org.webjars.npm/roboto-fontface
  compile group: 'org.webjars.npm', name: 'roboto-fontface', version: '0.9.0'
  // https://mvnrepository.com/artifact/org.webjars/material-design-icons
  compile group: 'org.webjars', name: 'material-design-icons', version: '3.0.1'
}

task createStaticDir {
  doLast{
    project.file('src/main/resources/static').mkdirs()
  }
}

createStaticDir.outputs.upToDateWhen { false }

task uiPublish() {
  description 'Build static contents for the web interface'
  dependsOn 'buildWebContents'
  finalizedBy 'copyStaticResources'
}

task buildWebContents(type: Exec) {
  dependsOn 'createStaticDir'
  dependsOn 'lintDemoSite'
  workingDir './ui'
  executable 'npm'
  args 'install'
  doLast {
    exec {
      workingDir './ui'
      executable 'npm'
      args ('run','build')
    }
  }
}

task viewDemoSite(type: Exec) {
  dependsOn 'lintDemoSite'
  workingDir './ui'
  executable 'npm'
  args 'install'
  doLast {
    exec {
      workingDir './ui'
      executable 'npm'
      args ('run','serve')
    }
  }
}

task lintDemoSite(type: Exec) {
  workingDir './ui'
  executable 'npm'
  args ('run','lint')
}

task copyStaticResources() {
  dependsOn 'copyDistResources'
  dependsOn 'copyIndexResource'
}

task copyDistResources(type: Copy) {
  from "ui/dist"
  into "src/main/resources/static"
}

task deleteOldIndex(type: Delete) { delete 'src/main/resources/templates/index.html' }

task copyIndexResource(type: Copy) {
  dependsOn 'deleteOldIndex'
  from "ui/dist/index.html"
  into "src/main/resources/templates"
}

processResources.dependsOn uiPublish

clean {
  delete "src/main/resources/static"
  delete "ui/dist"
}
