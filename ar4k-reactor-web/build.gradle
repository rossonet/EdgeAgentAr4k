description = "Reactor Spring WebFlux component and admin web UI"

dependencies {
  compile project(':ar4k-core')
  compile project(':ar4k-terminal')
  compile('org.springframework.boot:spring-boot-starter-webflux')
  compile('org.springframework.boot:spring-boot-starter-thymeleaf')
  compile group: 'com.google.code.gson', name: 'gson', version: '2.8.4'
  compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
  compile group: 'org.springframework.integration', name: 'spring-integration-webflux'
  compile group: 'org.webjars', name: 'webjars-locator-core', version: '0.34'
  compile group: 'org.webjars', name: 'd3js', version: '5.9.1'
  //compile group: 'org.webjars.npm', name: 'axios', version: '0.18.0'
  //compile group: 'org.webjars.npm', name: 'font-awesome', version: '4.7.0'
  //compile group: 'org.webjars.npm', name: 'jquery', version: '3.3.1'
  compile group: 'org.webjars', name: 'bootstrap', version: '4.3.1'
  //compile group: 'org.webjars.bower', name: 'popper.js', version: '1.14.6'
  //compile group: 'org.webjars.bower', name: 'bootstrap-material-design', version: '4.1.1'
  //compile group: 'org.webjars.npm', name: 'perfect-scrollbar', version: '1.4.0'
  //compile group: 'org.webjars.npm', name: 'vue', version: '2.6.9'
  //compile group: 'org.webjars.npm', name: 'chartist', version: '0.11.0'
  //compile group: 'org.webjars.npm', name: 'arrive', version: '2.4.1'
  //compile group: 'org.webjars.npm', name: 'roboto-fontface', version: '0.9.0'
  //compile group: 'org.webjars.npm', name: 'material-design-icons', version: '3.0.1'
  //compile group: 'org.webjars', name: 'bootstrap-notify', version: '3.1.3-1'
  //compile group: 'org.webjars', name: 'jquery.terminal', version: '0.11.2'
  // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-gateway
  //compile group: 'org.springframework.cloud', name: 'spring-cloud-starter-gateway', version: '2.1.1.RELEASE'
}

task uiPublish() {
  description 'Build static contents for the web interface'
  dependsOn 'buildWebContents'
  finalizedBy 'copyStaticResources'
}

//processResources.dependsOn uiPublish

task createStaticDir {
  doLast{
    project.file('src/main/resources/static').mkdirs()
  }
}

createStaticDir.outputs.upToDateWhen { false }

task buildWebContents(type: Exec) {
  dependsOn 'cleanFrontEnd'
  dependsOn 'createStaticDir'
  dependsOn 'lintDemoSite'
  workingDir './ui'
  executable 'npm'
  args 'install'
  doLast {
    exec {
      workingDir './ui'
      executable 'npm'
      args ('run','build','--report')
    }
  }
}
/*
 task viewDemoSite(type: Exec) {
 dependsOn 'lintDemoSite'
 workingDir './ui'
 executable 'npm'
 args 'install'
 doLast {
 exec {
 workingDir './ui'
 executable 'npm'
 args ('run','serve')
 }
 }
 }
 */

task vueGui(type: Exec) {
  doFirst { environment 'EDITOR', 'atom' }
  workingDir './ui'
  executable 'vue'
  args 'ui'
}

task lintDemoSite(type: Exec) {
  workingDir './ui'
  executable 'npm'
  args ('run','lint')
}

task copyStaticResources() {
  dependsOn 'copyDistResources'
  dependsOn 'copyIndexResource'
  //finalizedBy 'cleanStaticImg'
}

task copyDistResources(type: Copy) {
  from "./ui/dist"
  into "src/main/resources/static"
}

task deleteOldIndex(type: Delete) { delete 'src/main/resources/templates/index.html' }

task copyIndexResource(type: Copy) {
  dependsOn 'deleteOldIndex'
  from "./ui/dist/index.html"
  into "src/main/resources/templates"
}

clean { dependsOn 'cleanFrontEnd' }

task cleanFrontEnd(type: Delete) {
  delete "src/main/resources/static"
  delete "./ui/dist"
}

//task cleanStaticImg(type: Delete) { delete "src/main/resources/static/img" }
