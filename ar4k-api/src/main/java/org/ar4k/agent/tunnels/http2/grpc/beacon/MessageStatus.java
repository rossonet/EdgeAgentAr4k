// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ar4k_beacon.proto

package org.ar4k.agent.tunnels.http2.grpc.beacon;

/**
 * Protobuf enum {@code beacon.MessageStatus}
 */
public enum MessageStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>channelActive = 0;</code>
   */
  channelActive(0),
  /**
   * <code>channelInactive = 1;</code>
   */
  channelInactive(1),
  /**
   * <code>channelReadComplete = 2;</code>
   */
  channelReadComplete(2),
  /**
   * <code>channelRegistered = 3;</code>
   */
  channelRegistered(3),
  /**
   * <code>channelUnregistered = 4;</code>
   */
  channelUnregistered(4),
  /**
   * <code>channelWritabilityChanged = 5;</code>
   */
  channelWritabilityChanged(5),
  /**
   * <code>exceptionCaught = 6;</code>
   */
  exceptionCaught(6),
  /**
   * <code>userEventTriggered = 7;</code>
   */
  userEventTriggered(7),
  /**
   * <code>channelTransmission = 8;</code>
   */
  channelTransmission(8),
  /**
   * <code>beaconChannelRequest = 9;</code>
   */
  beaconChannelRequest(9),
  /**
   * <code>beaconMessageAck = 10;</code>
   */
  beaconMessageAck(10),
  /**
   * <code>channelTransmissionCompressed = 11;</code>
   */
  channelTransmissionCompressed(11),
  /**
   * <code>closeRequestServer = 12;</code>
   */
  closeRequestServer(12),
  /**
   * <code>closeRequestClient = 13;</code>
   */
  closeRequestClient(13),
  /**
   * <code>beaconMessageControl = 14;</code>
   */
  beaconMessageControl(14),
  /**
   * <code>beaconLocalPing = 15;</code>
   */
  beaconLocalPing(15),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>channelActive = 0;</code>
   */
  public static final int channelActive_VALUE = 0;
  /**
   * <code>channelInactive = 1;</code>
   */
  public static final int channelInactive_VALUE = 1;
  /**
   * <code>channelReadComplete = 2;</code>
   */
  public static final int channelReadComplete_VALUE = 2;
  /**
   * <code>channelRegistered = 3;</code>
   */
  public static final int channelRegistered_VALUE = 3;
  /**
   * <code>channelUnregistered = 4;</code>
   */
  public static final int channelUnregistered_VALUE = 4;
  /**
   * <code>channelWritabilityChanged = 5;</code>
   */
  public static final int channelWritabilityChanged_VALUE = 5;
  /**
   * <code>exceptionCaught = 6;</code>
   */
  public static final int exceptionCaught_VALUE = 6;
  /**
   * <code>userEventTriggered = 7;</code>
   */
  public static final int userEventTriggered_VALUE = 7;
  /**
   * <code>channelTransmission = 8;</code>
   */
  public static final int channelTransmission_VALUE = 8;
  /**
   * <code>beaconChannelRequest = 9;</code>
   */
  public static final int beaconChannelRequest_VALUE = 9;
  /**
   * <code>beaconMessageAck = 10;</code>
   */
  public static final int beaconMessageAck_VALUE = 10;
  /**
   * <code>channelTransmissionCompressed = 11;</code>
   */
  public static final int channelTransmissionCompressed_VALUE = 11;
  /**
   * <code>closeRequestServer = 12;</code>
   */
  public static final int closeRequestServer_VALUE = 12;
  /**
   * <code>closeRequestClient = 13;</code>
   */
  public static final int closeRequestClient_VALUE = 13;
  /**
   * <code>beaconMessageControl = 14;</code>
   */
  public static final int beaconMessageControl_VALUE = 14;
  /**
   * <code>beaconLocalPing = 15;</code>
   */
  public static final int beaconLocalPing_VALUE = 15;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static MessageStatus valueOf(int value) {
    return forNumber(value);
  }

  public static MessageStatus forNumber(int value) {
    switch (value) {
      case 0: return channelActive;
      case 1: return channelInactive;
      case 2: return channelReadComplete;
      case 3: return channelRegistered;
      case 4: return channelUnregistered;
      case 5: return channelWritabilityChanged;
      case 6: return exceptionCaught;
      case 7: return userEventTriggered;
      case 8: return channelTransmission;
      case 9: return beaconChannelRequest;
      case 10: return beaconMessageAck;
      case 11: return channelTransmissionCompressed;
      case 12: return closeRequestServer;
      case 13: return closeRequestClient;
      case 14: return beaconMessageControl;
      case 15: return beaconLocalPing;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<MessageStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      MessageStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<MessageStatus>() {
          public MessageStatus findValueByNumber(int number) {
            return MessageStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return org.ar4k.agent.tunnels.http2.grpc.beacon.BeaconMirrorService.getDescriptor().getEnumTypes().get(6);
  }

  private static final MessageStatus[] VALUES = values();

  public static MessageStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private MessageStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:beacon.MessageStatus)
}

